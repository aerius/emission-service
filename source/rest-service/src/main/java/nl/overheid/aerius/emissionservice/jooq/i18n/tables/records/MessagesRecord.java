/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.i18n.tables.records;


import nl.overheid.aerius.emissionservice.jooq.i18n.enums.LanguageCodeType;
import nl.overheid.aerius.emissionservice.jooq.i18n.tables.Messages;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Systeem tabel voor localized teksten.
 * 
 * @file source/database/src/main/sql/i18n/02-tables.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessagesRecord extends UpdatableRecordImpl<MessagesRecord> implements Record3<String, LanguageCodeType, String> {

    private static final long serialVersionUID = 1138737265;

    /**
     * Setter for <code>i18n.messages.key</code>.
     */
    public void setKey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>i18n.messages.key</code>.
     */
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>i18n.messages.language_code</code>.
     */
    public void setLanguageCode(LanguageCodeType value) {
        set(1, value);
    }

    /**
     * Getter for <code>i18n.messages.language_code</code>.
     */
    public LanguageCodeType getLanguageCode() {
        return (LanguageCodeType) get(1);
    }

    /**
     * Setter for <code>i18n.messages.message</code>.
     */
    public void setMessage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>i18n.messages.message</code>.
     */
    public String getMessage() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, LanguageCodeType> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, LanguageCodeType, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, LanguageCodeType, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Messages.MESSAGES.KEY;
    }

    @Override
    public Field<LanguageCodeType> field2() {
        return Messages.MESSAGES.LANGUAGE_CODE;
    }

    @Override
    public Field<String> field3() {
        return Messages.MESSAGES.MESSAGE;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public LanguageCodeType component2() {
        return getLanguageCode();
    }

    @Override
    public String component3() {
        return getMessage();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public LanguageCodeType value2() {
        return getLanguageCode();
    }

    @Override
    public String value3() {
        return getMessage();
    }

    @Override
    public MessagesRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public MessagesRecord value2(LanguageCodeType value) {
        setLanguageCode(value);
        return this;
    }

    @Override
    public MessagesRecord value3(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public MessagesRecord values(String value1, LanguageCodeType value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessagesRecord
     */
    public MessagesRecord() {
        super(Messages.MESSAGES);
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(String key, LanguageCodeType languageCode, String message) {
        super(Messages.MESSAGES);

        set(0, key);
        set(1, languageCode);
        set(2, message);
    }
}
