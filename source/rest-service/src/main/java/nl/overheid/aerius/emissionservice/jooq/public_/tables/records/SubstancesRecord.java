/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.public_.tables.records;


import nl.overheid.aerius.emissionservice.jooq.public_.tables.Substances;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Stoffen
 * 
 * @file source/database/src/main/sql/substances/02-tables.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubstancesRecord extends UpdatableRecordImpl<SubstancesRecord> implements Record3<Short, String, String> {

    private static final long serialVersionUID = -1074847467;

    /**
     * Setter for <code>public.substances.substance_id</code>.
     */
    public void setSubstanceId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.substances.substance_id</code>.
     */
    public Short getSubstanceId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>public.substances.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.substances.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.substances.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.substances.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Short, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Short, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return Substances.SUBSTANCES.SUBSTANCE_ID;
    }

    @Override
    public Field<String> field2() {
        return Substances.SUBSTANCES.NAME;
    }

    @Override
    public Field<String> field3() {
        return Substances.SUBSTANCES.DESCRIPTION;
    }

    @Override
    public Short component1() {
        return getSubstanceId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Short value1() {
        return getSubstanceId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public SubstancesRecord value1(Short value) {
        setSubstanceId(value);
        return this;
    }

    @Override
    public SubstancesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public SubstancesRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SubstancesRecord values(Short value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubstancesRecord
     */
    public SubstancesRecord() {
        super(Substances.SUBSTANCES);
    }

    /**
     * Create a detached, initialised SubstancesRecord
     */
    public SubstancesRecord(Short substanceId, String name, String description) {
        super(Substances.SUBSTANCES);

        set(0, substanceId);
        set(1, name);
        set(2, description);
    }
}
