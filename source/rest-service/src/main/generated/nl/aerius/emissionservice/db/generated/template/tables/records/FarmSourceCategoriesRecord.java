/*
 * This file is generated by jOOQ.
 */
package nl.aerius.emissionservice.db.generated.template.tables.records;


import nl.aerius.emissionservice.db.generated.public_.enums.FarmEmissionFactorType;
import nl.aerius.emissionservice.db.generated.template.tables.FarmSourceCategories;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table containing the farm source categories.
 * A farm source category is a combination of a sector, animal type and emission
 * factor type.
 * The goal is to differentiate in the unit of emissions of different types of
 * farm emission sources.
 * 
 * @file
 * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FarmSourceCategoriesRecord extends UpdatableRecordImpl<FarmSourceCategoriesRecord> implements Record7<Integer, Integer, String, Integer, String, String, FarmEmissionFactorType> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>template.farm_source_categories.farm_source_category_id</code>.
     */
    public void setFarmSourceCategoryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>template.farm_source_categories.farm_source_category_id</code>.
     */
    public Integer getFarmSourceCategoryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>template.farm_source_categories.sector_id</code>.
     */
    public void setSectorId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.farm_source_categories.sector_id</code>.
     */
    public Integer getSectorId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>template.farm_source_categories.code</code>.
     */
    public void setCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.farm_source_categories.code</code>.
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>template.farm_source_categories.farm_animal_category_id</code>.
     */
    public void setFarmAnimalCategoryId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>template.farm_source_categories.farm_animal_category_id</code>.
     */
    public Integer getFarmAnimalCategoryId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>template.farm_source_categories.name</code>.
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>template.farm_source_categories.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>template.farm_source_categories.description</code>.
     */
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>template.farm_source_categories.description</code>.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>template.farm_source_categories.farm_emission_factor_type</code>.
     */
    public void setFarmEmissionFactorType(FarmEmissionFactorType value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>template.farm_source_categories.farm_emission_factor_type</code>.
     */
    public FarmEmissionFactorType getFarmEmissionFactorType() {
        return (FarmEmissionFactorType) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, Integer, String, String, FarmEmissionFactorType> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, String, Integer, String, String, FarmEmissionFactorType> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return FarmSourceCategories.FARM_SOURCE_CATEGORIES.FARM_SOURCE_CATEGORY_ID;
    }

    @Override
    public Field<Integer> field2() {
        return FarmSourceCategories.FARM_SOURCE_CATEGORIES.SECTOR_ID;
    }

    @Override
    public Field<String> field3() {
        return FarmSourceCategories.FARM_SOURCE_CATEGORIES.CODE;
    }

    @Override
    public Field<Integer> field4() {
        return FarmSourceCategories.FARM_SOURCE_CATEGORIES.FARM_ANIMAL_CATEGORY_ID;
    }

    @Override
    public Field<String> field5() {
        return FarmSourceCategories.FARM_SOURCE_CATEGORIES.NAME;
    }

    @Override
    public Field<String> field6() {
        return FarmSourceCategories.FARM_SOURCE_CATEGORIES.DESCRIPTION;
    }

    @Override
    public Field<FarmEmissionFactorType> field7() {
        return FarmSourceCategories.FARM_SOURCE_CATEGORIES.FARM_EMISSION_FACTOR_TYPE;
    }

    @Override
    public Integer component1() {
        return getFarmSourceCategoryId();
    }

    @Override
    public Integer component2() {
        return getSectorId();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public Integer component4() {
        return getFarmAnimalCategoryId();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public String component6() {
        return getDescription();
    }

    @Override
    public FarmEmissionFactorType component7() {
        return getFarmEmissionFactorType();
    }

    @Override
    public Integer value1() {
        return getFarmSourceCategoryId();
    }

    @Override
    public Integer value2() {
        return getSectorId();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public Integer value4() {
        return getFarmAnimalCategoryId();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public String value6() {
        return getDescription();
    }

    @Override
    public FarmEmissionFactorType value7() {
        return getFarmEmissionFactorType();
    }

    @Override
    public FarmSourceCategoriesRecord value1(Integer value) {
        setFarmSourceCategoryId(value);
        return this;
    }

    @Override
    public FarmSourceCategoriesRecord value2(Integer value) {
        setSectorId(value);
        return this;
    }

    @Override
    public FarmSourceCategoriesRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public FarmSourceCategoriesRecord value4(Integer value) {
        setFarmAnimalCategoryId(value);
        return this;
    }

    @Override
    public FarmSourceCategoriesRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public FarmSourceCategoriesRecord value6(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public FarmSourceCategoriesRecord value7(FarmEmissionFactorType value) {
        setFarmEmissionFactorType(value);
        return this;
    }

    @Override
    public FarmSourceCategoriesRecord values(Integer value1, Integer value2, String value3, Integer value4, String value5, String value6, FarmEmissionFactorType value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FarmSourceCategoriesRecord
     */
    public FarmSourceCategoriesRecord() {
        super(FarmSourceCategories.FARM_SOURCE_CATEGORIES);
    }

    /**
     * Create a detached, initialised FarmSourceCategoriesRecord
     */
    public FarmSourceCategoriesRecord(Integer farmSourceCategoryId, Integer sectorId, String code, Integer farmAnimalCategoryId, String name, String description, FarmEmissionFactorType farmEmissionFactorType) {
        super(FarmSourceCategories.FARM_SOURCE_CATEGORIES);

        setFarmSourceCategoryId(farmSourceCategoryId);
        setSectorId(sectorId);
        setCode(code);
        setFarmAnimalCategoryId(farmAnimalCategoryId);
        setName(name);
        setDescription(description);
        setFarmEmissionFactorType(farmEmissionFactorType);
    }
}
