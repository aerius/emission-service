/*
 * This file is generated by jOOQ.
 */
package nl.aerius.emissionservice.db.generated.template.tables.records;


import nl.aerius.emissionservice.db.generated.public_.enums.FarmEmissionFactorType;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingTypes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table containing farm lodging or farm housing systems (huisvestingssystemen).
 * 
 * A lodging system always belongs to a farm animal category.
 * This table also indicates if the system is a scrubber (luchtwasser).
 * For NL: this is in essence the RAV-code list, see
 * https://wetten.overheid.nl/jci1.3:c:BWBR0013629&amp;bijlage=1&amp;z=2023-04-01&amp;g=2023-04-01
 * 
 * 
 * @file
 * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FarmLodgingTypesRecord extends UpdatableRecordImpl<FarmLodgingTypesRecord> implements Record7<Integer, Integer, String, String, String, Boolean, FarmEmissionFactorType> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>template.farm_lodging_types.farm_lodging_type_id</code>.
     */
    public void setFarmLodgingTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.farm_lodging_type_id</code>.
     */
    public Integer getFarmLodgingTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>template.farm_lodging_types.farm_animal_category_id</code>.
     */
    public void setFarmAnimalCategoryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>template.farm_lodging_types.farm_animal_category_id</code>.
     */
    public Integer getFarmAnimalCategoryId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>template.farm_lodging_types.code</code>.
     */
    public void setCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.code</code>.
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>template.farm_lodging_types.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>template.farm_lodging_types.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>template.farm_lodging_types.scrubber</code>.
     */
    public void setScrubber(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.scrubber</code>.
     */
    public Boolean getScrubber() {
        return (Boolean) get(5);
    }

    /**
     * Setter for
     * <code>template.farm_lodging_types.farm_emission_factor_type</code>.
     */
    public void setFarmEmissionFactorType(FarmEmissionFactorType value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>template.farm_lodging_types.farm_emission_factor_type</code>.
     */
    public FarmEmissionFactorType getFarmEmissionFactorType() {
        return (FarmEmissionFactorType) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, String, String, Boolean, FarmEmissionFactorType> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, String, String, String, Boolean, FarmEmissionFactorType> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.FARM_LODGING_TYPE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.FARM_ANIMAL_CATEGORY_ID;
    }

    @Override
    public Field<String> field3() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.CODE;
    }

    @Override
    public Field<String> field4() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.NAME;
    }

    @Override
    public Field<String> field5() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.DESCRIPTION;
    }

    @Override
    public Field<Boolean> field6() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.SCRUBBER;
    }

    @Override
    public Field<FarmEmissionFactorType> field7() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.FARM_EMISSION_FACTOR_TYPE;
    }

    @Override
    public Integer component1() {
        return getFarmLodgingTypeId();
    }

    @Override
    public Integer component2() {
        return getFarmAnimalCategoryId();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Boolean component6() {
        return getScrubber();
    }

    @Override
    public FarmEmissionFactorType component7() {
        return getFarmEmissionFactorType();
    }

    @Override
    public Integer value1() {
        return getFarmLodgingTypeId();
    }

    @Override
    public Integer value2() {
        return getFarmAnimalCategoryId();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Boolean value6() {
        return getScrubber();
    }

    @Override
    public FarmEmissionFactorType value7() {
        return getFarmEmissionFactorType();
    }

    @Override
    public FarmLodgingTypesRecord value1(Integer value) {
        setFarmLodgingTypeId(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value2(Integer value) {
        setFarmAnimalCategoryId(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value6(Boolean value) {
        setScrubber(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value7(FarmEmissionFactorType value) {
        setFarmEmissionFactorType(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord values(Integer value1, Integer value2, String value3, String value4, String value5, Boolean value6, FarmEmissionFactorType value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FarmLodgingTypesRecord
     */
    public FarmLodgingTypesRecord() {
        super(FarmLodgingTypes.FARM_LODGING_TYPES);
    }

    /**
     * Create a detached, initialised FarmLodgingTypesRecord
     */
    public FarmLodgingTypesRecord(Integer farmLodgingTypeId, Integer farmAnimalCategoryId, String code, String name, String description, Boolean scrubber, FarmEmissionFactorType farmEmissionFactorType) {
        super(FarmLodgingTypes.FARM_LODGING_TYPES);

        setFarmLodgingTypeId(farmLodgingTypeId);
        setFarmAnimalCategoryId(farmAnimalCategoryId);
        setCode(code);
        setName(name);
        setDescription(description);
        setScrubber(scrubber);
        setFarmEmissionFactorType(farmEmissionFactorType);
    }
}
