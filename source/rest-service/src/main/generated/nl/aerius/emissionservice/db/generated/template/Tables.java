/*
 * This file is generated by jOOQ.
 */
package nl.aerius.emissionservice.db.generated.template;


import nl.aerius.emissionservice.db.generated.template.tables.DatasetMetadata;
import nl.aerius.emissionservice.db.generated.template.tables.DefaultGcnSectorSourceCharacteristicsView;
import nl.aerius.emissionservice.db.generated.template.tables.DefaultSourceCharacteristicsView;
import nl.aerius.emissionservice.db.generated.template.tables.EmissionDiurnalVariations;
import nl.aerius.emissionservice.db.generated.template.tables.EmissionDiurnalVariationsView;
import nl.aerius.emissionservice.db.generated.template.tables.FarmAdditionalLodgingSystemEmissionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.FarmAdditionalLodgingSystemEmissionFactorsView;
import nl.aerius.emissionservice.db.generated.template.tables.FarmAdditionalLodgingSystems;
import nl.aerius.emissionservice.db.generated.template.tables.FarmAdditionalLodgingSystemsToLodgingSystemDefinitions;
import nl.aerius.emissionservice.db.generated.template.tables.FarmAnimalCategories;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingFodderMeasureReductionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingFodderMeasureReductionFactorsView;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingFodderMeasures;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingFodderMeasuresAnimalCategory;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingSystemDefinitions;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingTypeEmissionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingTypeEmissionFactorsView;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingTypes;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingTypesOtherLodgingType;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingTypesToAdditionalLodgingSystems;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingTypesToLodgingSystemDefinitions;
import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingTypesToReductiveLodgingSystems;
import nl.aerius.emissionservice.db.generated.template.tables.FarmReductiveLodgingSystemReductionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.FarmReductiveLodgingSystemReductionFactorsView;
import nl.aerius.emissionservice.db.generated.template.tables.FarmReductiveLodgingSystems;
import nl.aerius.emissionservice.db.generated.template.tables.FarmReductiveLodgingSystemsToLodgingSystemDefinitions;
import nl.aerius.emissionservice.db.generated.template.tables.FarmSourceCategories;
import nl.aerius.emissionservice.db.generated.template.tables.FarmSourceEmissionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.FarmSourceEmissionFactorsView;
import nl.aerius.emissionservice.db.generated.template.tables.FarmlandCategories;
import nl.aerius.emissionservice.db.generated.template.tables.FarmlandCategoriesView;
import nl.aerius.emissionservice.db.generated.template.tables.GcnSectorSourceCharacteristics;
import nl.aerius.emissionservice.db.generated.template.tables.GcnSectors;
import nl.aerius.emissionservice.db.generated.template.tables.I18nEmissionDiurnalVariations;
import nl.aerius.emissionservice.db.generated.template.tables.I18nFarmAdditionalLodgingSystems;
import nl.aerius.emissionservice.db.generated.template.tables.I18nFarmAnimalCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nFarmLodgingFodderMeasures;
import nl.aerius.emissionservice.db.generated.template.tables.I18nFarmLodgingSystemDefinitions;
import nl.aerius.emissionservice.db.generated.template.tables.I18nFarmLodgingTypes;
import nl.aerius.emissionservice.db.generated.template.tables.I18nFarmReductiveLodgingSystems;
import nl.aerius.emissionservice.db.generated.template.tables.I18nFarmSourceCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nFarmlandCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nMobileSourceOffRoadCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nMobileSourceOnRoadCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nRoadAreaCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nRoadTypeCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nRoadVehicleCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nSectors;
import nl.aerius.emissionservice.db.generated.template.tables.I18nShippingInlandCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nShippingInlandWaterwayCategories;
import nl.aerius.emissionservice.db.generated.template.tables.I18nShippingMaritimeCategories;
import nl.aerius.emissionservice.db.generated.template.tables.MobileSourceOffRoadCategories;
import nl.aerius.emissionservice.db.generated.template.tables.MobileSourceOffRoadCategoryAdblueProperties;
import nl.aerius.emissionservice.db.generated.template.tables.MobileSourceOffRoadCategoryEmissionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.MobileSourceOnRoadCategories;
import nl.aerius.emissionservice.db.generated.template.tables.MobileSourceOnRoadCategoriesView;
import nl.aerius.emissionservice.db.generated.template.tables.MobileSourceOnRoadCategoryEmissionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.RoadAreaCategories;
import nl.aerius.emissionservice.db.generated.template.tables.RoadAreasToRoadTypes;
import nl.aerius.emissionservice.db.generated.template.tables.RoadCategories;
import nl.aerius.emissionservice.db.generated.template.tables.RoadCategoriesView;
import nl.aerius.emissionservice.db.generated.template.tables.RoadCategoryEmissionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.RoadSpeedProfiles;
import nl.aerius.emissionservice.db.generated.template.tables.RoadTypeCategories;
import nl.aerius.emissionservice.db.generated.template.tables.RoadTypesToSpeedProfiles;
import nl.aerius.emissionservice.db.generated.template.tables.RoadVehicleCategories;
import nl.aerius.emissionservice.db.generated.template.tables.SectorDefaultSourceCharacteristics;
import nl.aerius.emissionservice.db.generated.template.tables.Sectors;
import nl.aerius.emissionservice.db.generated.template.tables.SectorsMainGcnSector;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingInlandCategories;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingInlandCategoryEmissionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingInlandCategoryEmissionFactorsDocked;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingInlandCategorySourceCharacteristics;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingInlandCategorySourceCharacteristicsDocked;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingInlandSourceCharacteristicsDockedView;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingInlandSourceCharacteristicsView;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingInlandWaterwayCategories;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingInlandWaterwayCategoriesView;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingMaritimeCategories;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingMaritimeCategoryEmissionFactors;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingMaritimeCategoryManeuverProperties;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingMaritimeCategorySourceCharacteristics;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingMaritimeMooringManeuverFactors;
import nl.aerius.emissionservice.db.generated.template.tables.ShippingMaritimeSourceCharacteristicsView;


/**
 * Convenience access to all tables in template.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * Table containing metadata for this dataset.
     * 
     * @file source/database/src/main/sql/template/dataset_metadata.sql
     */
    public static final DatasetMetadata DATASET_METADATA = DatasetMetadata.DATASET_METADATA;

    /**
     * View returning the default GCN source characteristics.
     * As the GCN can have different default characteristics per substance, and
     * AERIUS only needs 1 set, this view returns the characteristics for the
     * most relevant substance.
     * 
     * @file source/database/src/main/sql/template/01-sectors/04-views.sql
     */
    public static final DefaultGcnSectorSourceCharacteristicsView DEFAULT_GCN_SECTOR_SOURCE_CHARACTERISTICS_VIEW = DefaultGcnSectorSourceCharacteristicsView.DEFAULT_GCN_SECTOR_SOURCE_CHARACTERISTICS_VIEW;

    /**
     * View returning the emission characteristics per AERIUS sector.
     * Falls back to the default GCN source characteristics (as returned by
     * default_gcn_sector_source_characteristics_view) whenever no AERIUS
     * default set is present.
     * 
     * @file source/database/src/main/sql/template/01-sectors/04-views.sql
     */
    public static final DefaultSourceCharacteristicsView DEFAULT_SOURCE_CHARACTERISTICS_VIEW = DefaultSourceCharacteristicsView.DEFAULT_SOURCE_CHARACTERISTICS_VIEW;

    /**
     * Table containing the different types of diurnal (temporal) variations.
     * 
     * @file
     * source/database/src/main/sql/template/01-sectors/02-tables/02-source_characteristics.sql
     */
    public static final EmissionDiurnalVariations EMISSION_DIURNAL_VARIATIONS = EmissionDiurnalVariations.EMISSION_DIURNAL_VARIATIONS;

    /**
     * View returning the different types of diurnal variation.
     * 
     * @file source/database/src/main/sql/template/01-sectors/04-views.sql
     */
    public static final EmissionDiurnalVariationsView EMISSION_DIURNAL_VARIATIONS_VIEW = EmissionDiurnalVariationsView.EMISSION_DIURNAL_VARIATIONS_VIEW;

    /**
     * Table containing the emission factors (kg/year) of the additional lodging
     * techniques/systems for farms.
     * These emission factors are additionally applied for a user-defined number
     * of animals that use the lodging system.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmAdditionalLodgingSystemEmissionFactors FARM_ADDITIONAL_LODGING_SYSTEM_EMISSION_FACTORS = FarmAdditionalLodgingSystemEmissionFactors.FARM_ADDITIONAL_LODGING_SYSTEM_EMISSION_FACTORS;

    /**
     * View returning the properties of additional lodging techniques, including
     * possible lodging definitions.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/farms.sql
     */
    public static final FarmAdditionalLodgingSystemEmissionFactorsView FARM_ADDITIONAL_LODGING_SYSTEM_EMISSION_FACTORS_VIEW = FarmAdditionalLodgingSystemEmissionFactorsView.FARM_ADDITIONAL_LODGING_SYSTEM_EMISSION_FACTORS_VIEW;

    /**
     * Table containing additional lodging techniques/systems for farms.
     * These are lodging techniques that can cause extra emissions, and which
     * can be used in combination with a lodging system (farm_lodging-type).
     * For NL: these additional lodging techniques are extracted from the
     * RAV-code list.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmAdditionalLodgingSystems FARM_ADDITIONAL_LODGING_SYSTEMS = FarmAdditionalLodgingSystems.FARM_ADDITIONAL_LODGING_SYSTEMS;

    /**
     * Table linking additional lodging techniques and lodging system
     * definitions (N:N)
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmAdditionalLodgingSystemsToLodgingSystemDefinitions FARM_ADDITIONAL_LODGING_SYSTEMS_TO_LODGING_SYSTEM_DEFINITIONS = FarmAdditionalLodgingSystemsToLodgingSystemDefinitions.FARM_ADDITIONAL_LODGING_SYSTEMS_TO_LODGING_SYSTEM_DEFINITIONS;

    /**
     * Table containing the farm animal categories.
     * For NL: these are the categories as present in the RAV-code list (RAV =
     * Regeling ammoniak en veehouderij).
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmAnimalCategories FARM_ANIMAL_CATEGORIES = FarmAnimalCategories.FARM_ANIMAL_CATEGORIES;

    /**
     * Table containing the reduction factors (factor 0..1) for fodder and
     * managment measures.
     * When measures are applied to a lodging system, a single reduction factor
     * for the combination of measures is first determined.
     * This reduction factor is then applied on the total emission of the
     * lodging system, including additional or emission reducing lodging systems
     * that are stacked.
     * 
     * @column reduction_factor_floor The reduction factor for emission from the
     * floor.
     * @column reduction_factor_cellar The reduction factor for emission from
     * the manure cellar.
     * @column reduction_factor_total The combined reduction factor for emission
     * from both floor and manure cellar.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingFodderMeasureReductionFactors FARM_LODGING_FODDER_MEASURE_REDUCTION_FACTORS = FarmLodgingFodderMeasureReductionFactors.FARM_LODGING_FODDER_MEASURE_REDUCTION_FACTORS;

    /**
     * View returning the fodder and management measures, including which farm
     * animal categories it can be applied to and the corresponding reduction
     * factors and portions.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/farms.sql
     */
    public static final FarmLodgingFodderMeasureReductionFactorsView FARM_LODGING_FODDER_MEASURE_REDUCTION_FACTORS_VIEW = FarmLodgingFodderMeasureReductionFactorsView.FARM_LODGING_FODDER_MEASURE_REDUCTION_FACTORS_VIEW;

    /**
     * Table containing fodder and managment measures.
     * These are measures that result in lower emissions, and can be applied on
     * a lodging system (farm_lodging_type).
     * For NL: see
     * https://wetten.overheid.nl/jci1.3:c:BWBR0013629&amp;bijlage=2&amp;z=2023-04-01&amp;g=2023-04-01
     * 
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingFodderMeasures FARM_LODGING_FODDER_MEASURES = FarmLodgingFodderMeasures.FARM_LODGING_FODDER_MEASURES;

    /**
     * Table containing the animal categories for which a measure can be
     * applied, and the corresponding ratio of ammonia emission originating from
     * the floor and the manure cellar.
     * The ammonia ratio for all measures should always be equal, which implies
     * that all chosen measures should apply to the same animal category: the
     * one that is used in the lodging system.
     * In other words, a measure only reduces emissions of a lodging system if
     * it can be applied on the animal category of the lodging system.
     * 
     * @column proportion_floor The portion of the total ammonia emission
     * originating from the floor for this combination of measure and animal
     * category.
     * @column proportion_cellar The portion of the total ammonia emission
     * originating from the manure cellar for this combination of measure and
     * animal category.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingFodderMeasuresAnimalCategory FARM_LODGING_FODDER_MEASURES_ANIMAL_CATEGORY = FarmLodgingFodderMeasuresAnimalCategory.FARM_LODGING_FODDER_MEASURES_ANIMAL_CATEGORY;

    /**
     * Table containing lodging system definitions, definitions of what lodging
     * systems are for farms.
     * For NL: These contain 'BWL-nummers' as used in the RAV.
     * See
     * https://www.infomil.nl/onderwerpen/landbouw/emissiearme-stalsystemen/stalbeschrijvingen/
     * 
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingSystemDefinitions FARM_LODGING_SYSTEM_DEFINITIONS = FarmLodgingSystemDefinitions.FARM_LODGING_SYSTEM_DEFINITIONS;

    /**
     * Table containing the emission factors (kg/year) for farm lodging systems.
     * 
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingTypeEmissionFactors FARM_LODGING_TYPE_EMISSION_FACTORS = FarmLodgingTypeEmissionFactors.FARM_LODGING_TYPE_EMISSION_FACTORS;

    /**
     * View returning the properties of farm lodging/housing systems, including
     * emission factors and possible lodging definitions.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/farms.sql
     */
    public static final FarmLodgingTypeEmissionFactorsView FARM_LODGING_TYPE_EMISSION_FACTORS_VIEW = FarmLodgingTypeEmissionFactorsView.FARM_LODGING_TYPE_EMISSION_FACTORS_VIEW;

    /**
     * Table containing farm lodging or farm housing systems
     * (huisvestingssystemen).
     * A lodging system always belongs to a farm animal category.
     * This table also indicates if the system is a scrubber (luchtwasser).
     * For NL: this is in essence the RAV-code list, see
     * https://wetten.overheid.nl/jci1.3:c:BWBR0013629&amp;bijlage=1&amp;z=2023-04-01&amp;g=2023-04-01
     * 
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingTypes FARM_LODGING_TYPES = FarmLodgingTypes.FARM_LODGING_TYPES;

    /**
     * Table linking low-emission farm lodging system to their corresponding
     * 'overige' lodging system.
     * This link (N:1) is only used when the lodging system is classified as
     * low-emission ('emissiearm').
     * In certain cases this will limit the emission factor in the emission
     * calculation, based on the other lodging system.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingTypesOtherLodgingType FARM_LODGING_TYPES_OTHER_LODGING_TYPE = FarmLodgingTypesOtherLodgingType.FARM_LODGING_TYPES_OTHER_LODGING_TYPE;

    /**
     * Table linking (N:N) which additional lodging techniques can be stacked on
     * which lodging system.
     * This table contains the allowed combinations within the RAV way of
     * working, however within calculator every combination is possible.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingTypesToAdditionalLodgingSystems FARM_LODGING_TYPES_TO_ADDITIONAL_LODGING_SYSTEMS = FarmLodgingTypesToAdditionalLodgingSystems.FARM_LODGING_TYPES_TO_ADDITIONAL_LODGING_SYSTEMS;

    /**
     * Table linking lodging systems and lodging system definitions (N:N).
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingTypesToLodgingSystemDefinitions FARM_LODGING_TYPES_TO_LODGING_SYSTEM_DEFINITIONS = FarmLodgingTypesToLodgingSystemDefinitions.FARM_LODGING_TYPES_TO_LODGING_SYSTEM_DEFINITIONS;

    /**
     * Table linking (N:N) which emission reducing lodging techniques can be
     * stacked on which lodging system.
     * This table contains the allowed combinations within the RAV way of
     * working, however within calculator every combination is possible.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmLodgingTypesToReductiveLodgingSystems FARM_LODGING_TYPES_TO_REDUCTIVE_LODGING_SYSTEMS = FarmLodgingTypesToReductiveLodgingSystems.FARM_LODGING_TYPES_TO_REDUCTIVE_LODGING_SYSTEMS;

    /**
     * Table containing the reduction factors (factor 0..1) for the emission
     * reducing lodging techniques.
     * These reduction factors are applied on the total emission of the lodging
     * system on which it is stacked, including any additional lodging
     * techniques that have been stacked.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmReductiveLodgingSystemReductionFactors FARM_REDUCTIVE_LODGING_SYSTEM_REDUCTION_FACTORS = FarmReductiveLodgingSystemReductionFactors.FARM_REDUCTIVE_LODGING_SYSTEM_REDUCTION_FACTORS;

    /**
     * View returning the properties of emission reducing lodging techniques,
     * including possible lodging definitions.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/farms.sql
     */
    public static final FarmReductiveLodgingSystemReductionFactorsView FARM_REDUCTIVE_LODGING_SYSTEM_REDUCTION_FACTORS_VIEW = FarmReductiveLodgingSystemReductionFactorsView.FARM_REDUCTIVE_LODGING_SYSTEM_REDUCTION_FACTORS_VIEW;

    /**
     * Table containing the emission reducing lodging techniques/systems for
     * farms.
     * These are lodging techniques that result in lower emissions, and they can
     * be stacked on top of a lodging system (farm_lodging_type).
     * These emission reducing techniques are extracted from the RAV-code list.
     * Whether or not the system is considered a scrubber (luchtwasser) is also
     * indicated.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmReductiveLodgingSystems FARM_REDUCTIVE_LODGING_SYSTEMS = FarmReductiveLodgingSystems.FARM_REDUCTIVE_LODGING_SYSTEMS;

    /**
     * Table linking emission reducing lodging techniques and lodging system
     * definitions (N:N)
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmReductiveLodgingSystemsToLodgingSystemDefinitions FARM_REDUCTIVE_LODGING_SYSTEMS_TO_LODGING_SYSTEM_DEFINITIONS = FarmReductiveLodgingSystemsToLodgingSystemDefinitions.FARM_REDUCTIVE_LODGING_SYSTEMS_TO_LODGING_SYSTEM_DEFINITIONS;

    /**
     * Table containing the farm source categories.
     * A farm source category is a combination of a sector, animal type and
     * emission factor type.
     * The goal is to differentiate in the unit of emissions of different types
     * of farm emission sources.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmSourceCategories FARM_SOURCE_CATEGORIES = FarmSourceCategories.FARM_SOURCE_CATEGORIES;

    /**
     * Table containing the emission factors for farm source categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
     */
    public static final FarmSourceEmissionFactors FARM_SOURCE_EMISSION_FACTORS = FarmSourceEmissionFactors.FARM_SOURCE_EMISSION_FACTORS;

    /**
     * View returning the properties of farm sources, including emission
     * factors.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/farms.sql
     */
    public static final FarmSourceEmissionFactorsView FARM_SOURCE_EMISSION_FACTORS_VIEW = FarmSourceEmissionFactorsView.FARM_SOURCE_EMISSION_FACTORS_VIEW;

    /**
     * Table containing categories for the different farmland activities.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/farmlands.sql
     */
    public static final FarmlandCategories FARMLAND_CATEGORIES = FarmlandCategories.FARMLAND_CATEGORIES;

    /**
     * View returning the farmland categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/farmlands.sql
     */
    public static final FarmlandCategoriesView FARMLAND_CATEGORIES_VIEW = FarmlandCategoriesView.FARMLAND_CATEGORIES_VIEW;

    /**
     * Table containing the predefined OPS characteristics per GCN sector.
     * 
     * @file
     * source/database/src/main/sql/template/01-sectors/02-tables/02-source_characteristics.sql
     */
    public static final GcnSectorSourceCharacteristics GCN_SECTOR_SOURCE_CHARACTERISTICS = GcnSectorSourceCharacteristics.GCN_SECTOR_SOURCE_CHARACTERISTICS;

    /**
     * Table containing GCN (RIVM) sectors.
     * Every GCN sector is linked to an AERIUS sector. This allows us to link
     * deposition to AERIUS sources if GCN/RIVM sources are used (Monitor).
     * 
     * @file
     * source/database/src/main/sql/template/01-sectors/02-tables/01-sectors.sql
     */
    public static final GcnSectors GCN_SECTORS = GcnSectors.GCN_SECTORS;

    /**
     * Table containing i18n localization for different types of diurnal
     * variation.
     * 
     * @file source/database/src/main/sql/template/01-sectors/i18n/base_keys.sql
     */
    public static final I18nEmissionDiurnalVariations I18N_EMISSION_DIURNAL_VARIATIONS = I18nEmissionDiurnalVariations.I18N_EMISSION_DIURNAL_VARIATIONS;

    /**
     * Translation table for additional lodging techniques for farms.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/farms.sql
     */
    public static final I18nFarmAdditionalLodgingSystems I18N_FARM_ADDITIONAL_LODGING_SYSTEMS = I18nFarmAdditionalLodgingSystems.I18N_FARM_ADDITIONAL_LODGING_SYSTEMS;

    /**
     * Translation table for farm animal categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/farms.sql
     */
    public static final I18nFarmAnimalCategories I18N_FARM_ANIMAL_CATEGORIES = I18nFarmAnimalCategories.I18N_FARM_ANIMAL_CATEGORIES;

    /**
     * Translation table for fodder and management measures for farms.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/farms.sql
     */
    public static final I18nFarmLodgingFodderMeasures I18N_FARM_LODGING_FODDER_MEASURES = I18nFarmLodgingFodderMeasures.I18N_FARM_LODGING_FODDER_MEASURES;

    /**
     * Translation table for lodging system definitions for farms.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/farms.sql
     */
    public static final I18nFarmLodgingSystemDefinitions I18N_FARM_LODGING_SYSTEM_DEFINITIONS = I18nFarmLodgingSystemDefinitions.I18N_FARM_LODGING_SYSTEM_DEFINITIONS;

    /**
     * Translation table for lodging systems for farms.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/farms.sql
     */
    public static final I18nFarmLodgingTypes I18N_FARM_LODGING_TYPES = I18nFarmLodgingTypes.I18N_FARM_LODGING_TYPES;

    /**
     * Translation table for emission reducing lodging techniques for farms.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/farms.sql
     */
    public static final I18nFarmReductiveLodgingSystems I18N_FARM_REDUCTIVE_LODGING_SYSTEMS = I18nFarmReductiveLodgingSystems.I18N_FARM_REDUCTIVE_LODGING_SYSTEMS;

    /**
     * Translation table for farm source categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/farms.sql
     */
    public static final I18nFarmSourceCategories I18N_FARM_SOURCE_CATEGORIES = I18nFarmSourceCategories.I18N_FARM_SOURCE_CATEGORIES;

    /**
     * Translation table for farmland activity categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/farmlands.sql
     */
    public static final I18nFarmlandCategories I18N_FARMLAND_CATEGORIES = I18nFarmlandCategories.I18N_FARMLAND_CATEGORIES;

    /**
     * Translation table for off road mobile source categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/mobile_sources.sql
     */
    public static final I18nMobileSourceOffRoadCategories I18N_MOBILE_SOURCE_OFF_ROAD_CATEGORIES = I18nMobileSourceOffRoadCategories.I18N_MOBILE_SOURCE_OFF_ROAD_CATEGORIES;

    /**
     * Translation table for on road mobile source categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/roads.sql
     */
    public static final I18nMobileSourceOnRoadCategories I18N_MOBILE_SOURCE_ON_ROAD_CATEGORIES = I18nMobileSourceOnRoadCategories.I18N_MOBILE_SOURCE_ON_ROAD_CATEGORIES;

    /**
     * Translation table for road area categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/roads.sql
     */
    public static final I18nRoadAreaCategories I18N_ROAD_AREA_CATEGORIES = I18nRoadAreaCategories.I18N_ROAD_AREA_CATEGORIES;

    /**
     * Translation table for road type categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/roads.sql
     */
    public static final I18nRoadTypeCategories I18N_ROAD_TYPE_CATEGORIES = I18nRoadTypeCategories.I18N_ROAD_TYPE_CATEGORIES;

    /**
     * Translation table for road vehicle categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/roads.sql
     */
    public static final I18nRoadVehicleCategories I18N_ROAD_VEHICLE_CATEGORIES = I18nRoadVehicleCategories.I18N_ROAD_VEHICLE_CATEGORIES;

    /**
     * Table containing i18n localization for sectors.
     * 
     * @file source/database/src/main/sql/template/01-sectors/i18n/base_keys.sql
     */
    public static final I18nSectors I18N_SECTORS = I18nSectors.I18N_SECTORS;

    /**
     * Translation table for inland shipping categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/shipping_inland.sql
     */
    public static final I18nShippingInlandCategories I18N_SHIPPING_INLAND_CATEGORIES = I18nShippingInlandCategories.I18N_SHIPPING_INLAND_CATEGORIES;

    /**
     * Translation table for inland shipping waterway categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/shipping_inland.sql
     */
    public static final I18nShippingInlandWaterwayCategories I18N_SHIPPING_INLAND_WATERWAY_CATEGORIES = I18nShippingInlandWaterwayCategories.I18N_SHIPPING_INLAND_WATERWAY_CATEGORIES;

    /**
     * Translation table for maritime shipping categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/i18n/shipping_maritime.sql
     */
    public static final I18nShippingMaritimeCategories I18N_SHIPPING_MARITIME_CATEGORIES = I18nShippingMaritimeCategories.I18N_SHIPPING_MARITIME_CATEGORIES;

    /**
     * Table containing the off road mobile source categories (stageklassen).
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/mobile_sources.sql
     */
    public static final MobileSourceOffRoadCategories MOBILE_SOURCE_OFF_ROAD_CATEGORIES = MobileSourceOffRoadCategories.MOBILE_SOURCE_OFF_ROAD_CATEGORIES;

    /**
     * Table containing properties per off road mobile source category that are
     * required to do adblu validations, independent of substances.
     * 
     * Not every off road mobile source category can use adblue, in which case
     * there is no record in this table.
     * @column max_adblue_fuel_ratio Maximum ratio between liters adblue and
     * fuel that should be used.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/mobile_sources.sql
     */
    public static final MobileSourceOffRoadCategoryAdblueProperties MOBILE_SOURCE_OFF_ROAD_CATEGORY_ADBLUE_PROPERTIES = MobileSourceOffRoadCategoryAdblueProperties.MOBILE_SOURCE_OFF_ROAD_CATEGORY_ADBLUE_PROPERTIES;

    /**
     * Table containing the emission factors for off road mobile sources.
     * 
     * There are emission factors available for fuel use and for operating
     * hours.
     * Based on the category, 1 of these is present (or not 0), or both are
     * present.
     * Besides these factors, an adblue emissionfactor can be present, which can
     * reduce the total emissions (these are expected to be negative values).
     * 
     * @column emission_factor_per_liter_fuel f1 Emission factor per liter
     * brandstof (kg/l)
     * @column emission_factor_per_operating_hour f2 Emission factor per
     * operating hour (stationary + working) (kg/hour)
     * @column emission_factor_per_liter_adblue f3 Emission factor per liter
     * adblue (kg/l).
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/mobile_sources.sql
     */
    public static final MobileSourceOffRoadCategoryEmissionFactors MOBILE_SOURCE_OFF_ROAD_CATEGORY_EMISSION_FACTORS = MobileSourceOffRoadCategoryEmissionFactors.MOBILE_SOURCE_OFF_ROAD_CATEGORY_EMISSION_FACTORS;

    /**
     * Table containing the on road mobile source categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final MobileSourceOnRoadCategories MOBILE_SOURCE_ON_ROAD_CATEGORIES = MobileSourceOnRoadCategories.MOBILE_SOURCE_ON_ROAD_CATEGORIES;

    /**
     * View returning the on road mobile source categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/roads.sql
     */
    public static final MobileSourceOnRoadCategoriesView MOBILE_SOURCE_ON_ROAD_CATEGORIES_VIEW = MobileSourceOnRoadCategoriesView.MOBILE_SOURCE_ON_ROAD_CATEGORIES_VIEW;

    /**
     * Table containing the emission factors for on road mobile source
     * categories.
     * These emission factors are in kg/km/vehicle.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final MobileSourceOnRoadCategoryEmissionFactors MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS = MobileSourceOnRoadCategoryEmissionFactors.MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS;

    /**
     * Table containing the different area categories for road traffic.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final RoadAreaCategories ROAD_AREA_CATEGORIES = RoadAreaCategories.ROAD_AREA_CATEGORIES;

    /**
     * Table linking road areas and road types.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final RoadAreasToRoadTypes ROAD_AREAS_TO_ROAD_TYPES = RoadAreasToRoadTypes.ROAD_AREAS_TO_ROAD_TYPES;

    /**
     * Table containing road categories, which are combinations of road areas,
     * road types, vehicle types, etc.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final RoadCategories ROAD_CATEGORIES = RoadCategories.ROAD_CATEGORIES;

    /**
     * View returning the road categories. This includes the emission factors
     * and stagnation factors per substance.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/roads.sql
     */
    public static final RoadCategoriesView ROAD_CATEGORIES_VIEW = RoadCategoriesView.ROAD_CATEGORIES_VIEW;

    /**
     * Table containing the emission factors for road categories for different
     * substances.
     * For NL: the emission factors are in g/vehicle/km
     * For UK: the emission factors are in g/km/s for vehicles per 24 hours.
     * 
     * NOTE: The years present in this table are not by definition the same as
     * the AERIUS policy/calculation years.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final RoadCategoryEmissionFactors ROAD_CATEGORY_EMISSION_FACTORS = RoadCategoryEmissionFactors.ROAD_CATEGORY_EMISSION_FACTORS;

    /**
     * Table containing the different speed profiles.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final RoadSpeedProfiles ROAD_SPEED_PROFILES = RoadSpeedProfiles.ROAD_SPEED_PROFILES;

    /**
     * Table containing the different road type categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final RoadTypeCategories ROAD_TYPE_CATEGORIES = RoadTypeCategories.ROAD_TYPE_CATEGORIES;

    /**
     * Table linking types of roads and speed profiles.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final RoadTypesToSpeedProfiles ROAD_TYPES_TO_SPEED_PROFILES = RoadTypesToSpeedProfiles.ROAD_TYPES_TO_SPEED_PROFILES;

    /**
     * Table containing the different traffic or vehicle categories.
     * 
     * These are the standard categories for road traffic (for example passenger
     * cars).
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
     */
    public static final RoadVehicleCategories ROAD_VEHICLE_CATEGORIES = RoadVehicleCategories.ROAD_VEHICLE_CATEGORIES;

    /**
     * Table containing the standard OPS characteristics per sector.
     * 
     * @file
     * source/database/src/main/sql/template/01-sectors/02-tables/02-source_characteristics.sql
     */
    public static final SectorDefaultSourceCharacteristics SECTOR_DEFAULT_SOURCE_CHARACTERISTICS = SectorDefaultSourceCharacteristics.SECTOR_DEFAULT_SOURCE_CHARACTERISTICS;

    /**
     * Table containing AERIUS sectors.
     * 
     * @file
     * source/database/src/main/sql/template/01-sectors/02-tables/01-sectors.sql
     */
    public static final Sectors SECTORS = Sectors.SECTORS;

    /**
     * Table linking sectors to main GCN sectors.
     * This can be used to link sources to a GCN sector if required.
     * It is also used for the ParticleSizeDistribution value in OPS
     * characteristics (for calculations involving substances like PM10).
     * 
     * @file
     * source/database/src/main/sql/template/01-sectors/02-tables/01-sectors.sql
     */
    public static final SectorsMainGcnSector SECTORS_MAIN_GCN_SECTOR = SectorsMainGcnSector.SECTORS_MAIN_GCN_SECTOR;

    /**
     * Table containing the inland shipping categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_inland.sql
     */
    public static final ShippingInlandCategories SHIPPING_INLAND_CATEGORIES = ShippingInlandCategories.SHIPPING_INLAND_CATEGORIES;

    /**
     * Table containing the emission factors for inland shipping categories for
     * moving ships.
     * These emission factors are defined per ship type, waterway type, travel
     * direction, laden state and substance.
     * 
     * The emission factors are specified by year (year-dependant), and
     * represent the emission factor during movement, in g/(kilometer * number
     * of ships) at an average speed.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_inland.sql
     */
    public static final ShippingInlandCategoryEmissionFactors SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS = ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS;

    /**
     * Table containing the emission factors for inland shipping categories for
     * docked ships.
     * These emission factors are defined per ship type, laden state and
     * substance.
     * 
     * The emission factors are specified by year (year-dependant), and
     * represent the emission factor when not moving (for example when docked),
     * in g/(hour * number of ships).
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_inland.sql
     */
    public static final ShippingInlandCategoryEmissionFactorsDocked SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS_DOCKED = ShippingInlandCategoryEmissionFactorsDocked.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS_DOCKED;

    /**
     * Table containing the OPS characteristics for the inland shipping
     * categories for moving ships.
     * These characteristics are defined per ship type, waterway type, travel
     * direction and laden state.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_inland.sql
     */
    public static final ShippingInlandCategorySourceCharacteristics SHIPPING_INLAND_CATEGORY_SOURCE_CHARACTERISTICS = ShippingInlandCategorySourceCharacteristics.SHIPPING_INLAND_CATEGORY_SOURCE_CHARACTERISTICS;

    /**
     * Table containing the OPS characteristics for inland shipping categories
     * for docked ships.
     * These characteristics are defined per ship type and laden state.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_inland.sql
     */
    public static final ShippingInlandCategorySourceCharacteristicsDocked SHIPPING_INLAND_CATEGORY_SOURCE_CHARACTERISTICS_DOCKED = ShippingInlandCategorySourceCharacteristicsDocked.SHIPPING_INLAND_CATEGORY_SOURCE_CHARACTERISTICS_DOCKED;

    /**
     * View returning the emission characteristics for inland shipping docks.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/shipping_inland.sql
     */
    public static final ShippingInlandSourceCharacteristicsDockedView SHIPPING_INLAND_SOURCE_CHARACTERISTICS_DOCKED_VIEW = ShippingInlandSourceCharacteristicsDockedView.SHIPPING_INLAND_SOURCE_CHARACTERISTICS_DOCKED_VIEW;

    /**
     * View returning the emission characteristics for inland shipping routes.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/shipping_inland.sql
     */
    public static final ShippingInlandSourceCharacteristicsView SHIPPING_INLAND_SOURCE_CHARACTERISTICS_VIEW = ShippingInlandSourceCharacteristicsView.SHIPPING_INLAND_SOURCE_CHARACTERISTICS_VIEW;

    /**
     * Table containing all waterway categories in the inland shipping network.
     * @column flowing For some types the current or flow of the waterway is of
     * importance, this is indicated by the flowing boolean.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_inland.sql
     */
    public static final ShippingInlandWaterwayCategories SHIPPING_INLAND_WATERWAY_CATEGORIES = ShippingInlandWaterwayCategories.SHIPPING_INLAND_WATERWAY_CATEGORIES;

    /**
     * View returning the waterway categories.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/shipping_inland.sql
     */
    public static final ShippingInlandWaterwayCategoriesView SHIPPING_INLAND_WATERWAY_CATEGORIES_VIEW = ShippingInlandWaterwayCategoriesView.SHIPPING_INLAND_WATERWAY_CATEGORIES_VIEW;

    /**
     * Table containing the maritime shipping categories.
     * The name of the category should indicate a tonnage-range.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_maritime.sql
     */
    public static final ShippingMaritimeCategories SHIPPING_MARITIME_CATEGORIES = ShippingMaritimeCategories.SHIPPING_MARITIME_CATEGORIES;

    /**
     * Table containing the emission factors for maritime shipping categories.
     * These factors are defined per shipping category, per substance, per year
     * and per movement type.
     * 
     * The unit of the emission factor depends on the movement type.
     * When moving at a certain speed, the emission factor is in kg/(kilometer *
     * number of ships).
     * When not moving/docked, the emission factor is in kg/(hours docked *
     * number of ships).
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_maritime.sql
     */
    public static final ShippingMaritimeCategoryEmissionFactors SHIPPING_MARITIME_CATEGORY_EMISSION_FACTORS = ShippingMaritimeCategoryEmissionFactors.SHIPPING_MARITIME_CATEGORY_EMISSION_FACTORS;

    /**
     * Table containing maneuver properties for maritime shipping categories.
     * 
     * @column maneuver_factor The factor to increase emissions at the starting
     * section of a route due to maneuvring the ship near the dock.
     * @column maneuver_length The length of the route for which the factor
     * should be applied.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_maritime.sql
     */
    public static final ShippingMaritimeCategoryManeuverProperties SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES = ShippingMaritimeCategoryManeuverProperties.SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES;

    /**
     * Table containing the OPS characteristics per maritime shipping category.
     * 
     * These characteristics all depend on the type of the ship and the type of
     * movement.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_maritime.sql
     */
    public static final ShippingMaritimeCategorySourceCharacteristics SHIPPING_MARITIME_CATEGORY_SOURCE_CHARACTERISTICS = ShippingMaritimeCategorySourceCharacteristics.SHIPPING_MARITIME_CATEGORY_SOURCE_CHARACTERISTICS;

    /**
     * Table containing the maneuver factors and maneuver lengths for bruto
     * tonnage ranges.
     * 
     * @column tonnage_lower_threshold The lower threshold/boundary of the bruto
     * tonnage range. The upper threshold/boundary is the lower threshold of the
     * next range.
     * @column maneuver_factor The factor that should be applied to the emission
     * for the section of the route where maneuvering near a dock is expected.
     * @column maneuver_length The length of the route from a dock for which
     * maneuvering is expected, and for which the maneuver factor should be
     * applied.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/02-tables/shipping_maritime.sql
     */
    public static final ShippingMaritimeMooringManeuverFactors SHIPPING_MARITIME_MOORING_MANEUVER_FACTORS = ShippingMaritimeMooringManeuverFactors.SHIPPING_MARITIME_MOORING_MANEUVER_FACTORS;

    /**
     * View returning the emission characteristics for maritime shipping.
     * 
     * @file
     * source/database/src/main/sql/template/02-emission_factors/04-views/shipping_maritime.sql
     */
    public static final ShippingMaritimeSourceCharacteristicsView SHIPPING_MARITIME_SOURCE_CHARACTERISTICS_VIEW = ShippingMaritimeSourceCharacteristicsView.SHIPPING_MARITIME_SOURCE_CHARACTERISTICS_VIEW;
}
