/*
 * This file is generated by jOOQ.
 */
package nl.aerius.emissionservice.db.generated.template.tables.records;


import nl.aerius.emissionservice.db.generated.template.tables.MobileSourceOffRoadCategoryAdblueProperties;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table containing properties per off road mobile source category that are
 * required to do adblu validations, independent of substances.
 * 
 * Not every off road mobile source category can use adblue, in which case there
 * is no record in this table.
 * @column max_adblue_fuel_ratio Maximum ratio between liters adblue and fuel
 * that should be used.
 * 
 * @file
 * source/database/src/main/sql/template/02-emission_factors/02-tables/mobile_sources.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MobileSourceOffRoadCategoryAdbluePropertiesRecord extends UpdatableRecordImpl<MobileSourceOffRoadCategoryAdbluePropertiesRecord> implements Record2<Short, Float> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>template.mobile_source_off_road_category_adblue_properties.mobile_source_off_road_category_id</code>.
     */
    public void setMobileSourceOffRoadCategoryId(Short value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>template.mobile_source_off_road_category_adblue_properties.mobile_source_off_road_category_id</code>.
     */
    public Short getMobileSourceOffRoadCategoryId() {
        return (Short) get(0);
    }

    /**
     * Setter for
     * <code>template.mobile_source_off_road_category_adblue_properties.max_adblue_fuel_ratio</code>.
     */
    public void setMaxAdblueFuelRatio(Float value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>template.mobile_source_off_road_category_adblue_properties.max_adblue_fuel_ratio</code>.
     */
    public Float getMaxAdblueFuelRatio() {
        return (Float) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Short, Float> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Short, Float> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return MobileSourceOffRoadCategoryAdblueProperties.MOBILE_SOURCE_OFF_ROAD_CATEGORY_ADBLUE_PROPERTIES.MOBILE_SOURCE_OFF_ROAD_CATEGORY_ID;
    }

    @Override
    public Field<Float> field2() {
        return MobileSourceOffRoadCategoryAdblueProperties.MOBILE_SOURCE_OFF_ROAD_CATEGORY_ADBLUE_PROPERTIES.MAX_ADBLUE_FUEL_RATIO;
    }

    @Override
    public Short component1() {
        return getMobileSourceOffRoadCategoryId();
    }

    @Override
    public Float component2() {
        return getMaxAdblueFuelRatio();
    }

    @Override
    public Short value1() {
        return getMobileSourceOffRoadCategoryId();
    }

    @Override
    public Float value2() {
        return getMaxAdblueFuelRatio();
    }

    @Override
    public MobileSourceOffRoadCategoryAdbluePropertiesRecord value1(Short value) {
        setMobileSourceOffRoadCategoryId(value);
        return this;
    }

    @Override
    public MobileSourceOffRoadCategoryAdbluePropertiesRecord value2(Float value) {
        setMaxAdblueFuelRatio(value);
        return this;
    }

    @Override
    public MobileSourceOffRoadCategoryAdbluePropertiesRecord values(Short value1, Float value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MobileSourceOffRoadCategoryAdbluePropertiesRecord
     */
    public MobileSourceOffRoadCategoryAdbluePropertiesRecord() {
        super(MobileSourceOffRoadCategoryAdblueProperties.MOBILE_SOURCE_OFF_ROAD_CATEGORY_ADBLUE_PROPERTIES);
    }

    /**
     * Create a detached, initialised
     * MobileSourceOffRoadCategoryAdbluePropertiesRecord
     */
    public MobileSourceOffRoadCategoryAdbluePropertiesRecord(Short mobileSourceOffRoadCategoryId, Float maxAdblueFuelRatio) {
        super(MobileSourceOffRoadCategoryAdblueProperties.MOBILE_SOURCE_OFF_ROAD_CATEGORY_ADBLUE_PROPERTIES);

        setMobileSourceOffRoadCategoryId(mobileSourceOffRoadCategoryId);
        setMaxAdblueFuelRatio(maxAdblueFuelRatio);
    }
}
