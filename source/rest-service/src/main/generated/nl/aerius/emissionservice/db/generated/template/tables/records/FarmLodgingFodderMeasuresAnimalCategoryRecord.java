/*
 * This file is generated by jOOQ.
 */
package nl.aerius.emissionservice.db.generated.template.tables.records;


import nl.aerius.emissionservice.db.generated.template.tables.FarmLodgingFodderMeasuresAnimalCategory;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table containing the animal categories for which a measure can be applied,
 * and the corresponding ratio of ammonia emission originating from the floor
 * and the manure cellar.
 * The ammonia ratio for all measures should always be equal, which implies that
 * all chosen measures should apply to the same animal category: the one that is
 * used in the lodging system.
 * In other words, a measure only reduces emissions of a lodging system if it
 * can be applied on the animal category of the lodging system.
 * 
 * @column proportion_floor The portion of the total ammonia emission
 * originating from the floor for this combination of measure and animal
 * category.
 * @column proportion_cellar The portion of the total ammonia emission
 * originating from the manure cellar for this combination of measure and animal
 * category.
 * 
 * @file
 * source/database/src/main/sql/template/02-emission_factors/02-tables/farms.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FarmLodgingFodderMeasuresAnimalCategoryRecord extends UpdatableRecordImpl<FarmLodgingFodderMeasuresAnimalCategoryRecord> implements Record4<Integer, Integer, Float, Float> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>template.farm_lodging_fodder_measures_animal_category.farm_lodging_fodder_measure_id</code>.
     */
    public void setFarmLodgingFodderMeasureId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>template.farm_lodging_fodder_measures_animal_category.farm_lodging_fodder_measure_id</code>.
     */
    public Integer getFarmLodgingFodderMeasureId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>template.farm_lodging_fodder_measures_animal_category.farm_animal_category_id</code>.
     */
    public void setFarmAnimalCategoryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>template.farm_lodging_fodder_measures_animal_category.farm_animal_category_id</code>.
     */
    public Integer getFarmAnimalCategoryId() {
        return (Integer) get(1);
    }

    /**
     * Setter for
     * <code>template.farm_lodging_fodder_measures_animal_category.proportion_floor</code>.
     */
    public void setProportionFloor(Float value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>template.farm_lodging_fodder_measures_animal_category.proportion_floor</code>.
     */
    public Float getProportionFloor() {
        return (Float) get(2);
    }

    /**
     * Setter for
     * <code>template.farm_lodging_fodder_measures_animal_category.proportion_cellar</code>.
     */
    public void setProportionCellar(Float value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>template.farm_lodging_fodder_measures_animal_category.proportion_cellar</code>.
     */
    public Float getProportionCellar() {
        return (Float) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Float, Float> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Float, Float> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return FarmLodgingFodderMeasuresAnimalCategory.FARM_LODGING_FODDER_MEASURES_ANIMAL_CATEGORY.FARM_LODGING_FODDER_MEASURE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return FarmLodgingFodderMeasuresAnimalCategory.FARM_LODGING_FODDER_MEASURES_ANIMAL_CATEGORY.FARM_ANIMAL_CATEGORY_ID;
    }

    @Override
    public Field<Float> field3() {
        return FarmLodgingFodderMeasuresAnimalCategory.FARM_LODGING_FODDER_MEASURES_ANIMAL_CATEGORY.PROPORTION_FLOOR;
    }

    @Override
    public Field<Float> field4() {
        return FarmLodgingFodderMeasuresAnimalCategory.FARM_LODGING_FODDER_MEASURES_ANIMAL_CATEGORY.PROPORTION_CELLAR;
    }

    @Override
    public Integer component1() {
        return getFarmLodgingFodderMeasureId();
    }

    @Override
    public Integer component2() {
        return getFarmAnimalCategoryId();
    }

    @Override
    public Float component3() {
        return getProportionFloor();
    }

    @Override
    public Float component4() {
        return getProportionCellar();
    }

    @Override
    public Integer value1() {
        return getFarmLodgingFodderMeasureId();
    }

    @Override
    public Integer value2() {
        return getFarmAnimalCategoryId();
    }

    @Override
    public Float value3() {
        return getProportionFloor();
    }

    @Override
    public Float value4() {
        return getProportionCellar();
    }

    @Override
    public FarmLodgingFodderMeasuresAnimalCategoryRecord value1(Integer value) {
        setFarmLodgingFodderMeasureId(value);
        return this;
    }

    @Override
    public FarmLodgingFodderMeasuresAnimalCategoryRecord value2(Integer value) {
        setFarmAnimalCategoryId(value);
        return this;
    }

    @Override
    public FarmLodgingFodderMeasuresAnimalCategoryRecord value3(Float value) {
        setProportionFloor(value);
        return this;
    }

    @Override
    public FarmLodgingFodderMeasuresAnimalCategoryRecord value4(Float value) {
        setProportionCellar(value);
        return this;
    }

    @Override
    public FarmLodgingFodderMeasuresAnimalCategoryRecord values(Integer value1, Integer value2, Float value3, Float value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FarmLodgingFodderMeasuresAnimalCategoryRecord
     */
    public FarmLodgingFodderMeasuresAnimalCategoryRecord() {
        super(FarmLodgingFodderMeasuresAnimalCategory.FARM_LODGING_FODDER_MEASURES_ANIMAL_CATEGORY);
    }

    /**
     * Create a detached, initialised
     * FarmLodgingFodderMeasuresAnimalCategoryRecord
     */
    public FarmLodgingFodderMeasuresAnimalCategoryRecord(Integer farmLodgingFodderMeasureId, Integer farmAnimalCategoryId, Float proportionFloor, Float proportionCellar) {
        super(FarmLodgingFodderMeasuresAnimalCategory.FARM_LODGING_FODDER_MEASURES_ANIMAL_CATEGORY);

        setFarmLodgingFodderMeasureId(farmLodgingFodderMeasureId);
        setFarmAnimalCategoryId(farmAnimalCategoryId);
        setProportionFloor(proportionFloor);
        setProportionCellar(proportionCellar);
    }
}
