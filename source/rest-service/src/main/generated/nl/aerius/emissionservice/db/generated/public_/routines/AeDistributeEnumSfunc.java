/*
 * This file is generated by jOOQ.
 */
package nl.aerius.emissionservice.db.generated.public_.routines;


import java.math.BigDecimal;

import nl.aerius.emissionservice.db.generated.public_.Public;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AeDistributeEnumSfunc extends AbstractRoutine<BigDecimal[]> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>public.ae_distribute_enum_sfunc.RETURN_VALUE</code>.
     */
    public static final Parameter<BigDecimal[]> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.NUMERIC.getArrayDataType(), false, false);

    /**
     * The parameter <code>public.ae_distribute_enum_sfunc.state</code>.
     */
    public static final Parameter<BigDecimal[]> STATE = Internal.createParameter("state", SQLDataType.NUMERIC.getArrayDataType(), false, false);

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static final Parameter<Object> KEY = Internal.createParameter("key", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"anyenum\""), false, false);

    /**
     * The parameter <code>public.ae_distribute_enum_sfunc.weight</code>.
     */
    public static final Parameter<BigDecimal> WEIGHT = Internal.createParameter("weight", SQLDataType.NUMERIC, false, false);

    /**
     * Create a new routine call instance
     */
    public AeDistributeEnumSfunc() {
        super("ae_distribute_enum_sfunc", Public.PUBLIC, SQLDataType.NUMERIC.getArrayDataType());

        setReturnParameter(RETURN_VALUE);
        addInParameter(STATE);
        addInParameter(KEY);
        addInParameter(WEIGHT);
    }

    /**
     * Set the <code>state</code> parameter IN value to the routine
     */
    public void setState(BigDecimal[] value) {
        setValue(STATE, value);
    }

    /**
     * Set the <code>state</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setState(Field<BigDecimal[]> field) {
        setField(STATE, field);
    }

    /**
     * Set the <code>key</code> parameter IN value to the routine
     */
    public void setKey(Object value) {
        setValue(KEY, value);
    }

    /**
     * Set the <code>key</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setKey(Field<Object> field) {
        setField(KEY, field);
    }

    /**
     * Set the <code>weight</code> parameter IN value to the routine
     */
    public void setWeight(BigDecimal value) {
        setValue(WEIGHT, value);
    }

    /**
     * Set the <code>weight</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setWeight(Field<BigDecimal> field) {
        setField(WEIGHT, field);
    }
}
