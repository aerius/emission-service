/*
 * This file is generated by jOOQ.
 */
package nl.aerius.emissionservice.db.generated.template.tables.records;


import nl.aerius.emissionservice.db.generated.public_.enums.SpeedLimitEnforcementType;
import nl.aerius.emissionservice.db.generated.template.tables.RoadSpeedProfiles;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table containing the different speed profiles.
 * 
 * @file
 * source/database/src/main/sql/template/02-emission_factors/02-tables/roads.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoadSpeedProfilesRecord extends UpdatableRecordImpl<RoadSpeedProfilesRecord> implements Record4<Integer, SpeedLimitEnforcementType, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>template.road_speed_profiles.road_speed_profile_id</code>.
     */
    public void setRoadSpeedProfileId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>template.road_speed_profiles.road_speed_profile_id</code>.
     */
    public Integer getRoadSpeedProfileId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>template.road_speed_profiles.speed_limit_enforcement</code>.
     */
    public void setSpeedLimitEnforcement(SpeedLimitEnforcementType value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>template.road_speed_profiles.speed_limit_enforcement</code>.
     */
    public SpeedLimitEnforcementType getSpeedLimitEnforcement() {
        return (SpeedLimitEnforcementType) get(1);
    }

    /**
     * Setter for <code>template.road_speed_profiles.maximum_speed</code>.
     */
    public void setMaximumSpeed(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.road_speed_profiles.maximum_speed</code>.
     */
    public Integer getMaximumSpeed() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>template.road_speed_profiles.gradient</code>.
     */
    public void setGradient(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.road_speed_profiles.gradient</code>.
     */
    public Integer getGradient() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, SpeedLimitEnforcementType, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, SpeedLimitEnforcementType, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RoadSpeedProfiles.ROAD_SPEED_PROFILES.ROAD_SPEED_PROFILE_ID;
    }

    @Override
    public Field<SpeedLimitEnforcementType> field2() {
        return RoadSpeedProfiles.ROAD_SPEED_PROFILES.SPEED_LIMIT_ENFORCEMENT;
    }

    @Override
    public Field<Integer> field3() {
        return RoadSpeedProfiles.ROAD_SPEED_PROFILES.MAXIMUM_SPEED;
    }

    @Override
    public Field<Integer> field4() {
        return RoadSpeedProfiles.ROAD_SPEED_PROFILES.GRADIENT;
    }

    @Override
    public Integer component1() {
        return getRoadSpeedProfileId();
    }

    @Override
    public SpeedLimitEnforcementType component2() {
        return getSpeedLimitEnforcement();
    }

    @Override
    public Integer component3() {
        return getMaximumSpeed();
    }

    @Override
    public Integer component4() {
        return getGradient();
    }

    @Override
    public Integer value1() {
        return getRoadSpeedProfileId();
    }

    @Override
    public SpeedLimitEnforcementType value2() {
        return getSpeedLimitEnforcement();
    }

    @Override
    public Integer value3() {
        return getMaximumSpeed();
    }

    @Override
    public Integer value4() {
        return getGradient();
    }

    @Override
    public RoadSpeedProfilesRecord value1(Integer value) {
        setRoadSpeedProfileId(value);
        return this;
    }

    @Override
    public RoadSpeedProfilesRecord value2(SpeedLimitEnforcementType value) {
        setSpeedLimitEnforcement(value);
        return this;
    }

    @Override
    public RoadSpeedProfilesRecord value3(Integer value) {
        setMaximumSpeed(value);
        return this;
    }

    @Override
    public RoadSpeedProfilesRecord value4(Integer value) {
        setGradient(value);
        return this;
    }

    @Override
    public RoadSpeedProfilesRecord values(Integer value1, SpeedLimitEnforcementType value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoadSpeedProfilesRecord
     */
    public RoadSpeedProfilesRecord() {
        super(RoadSpeedProfiles.ROAD_SPEED_PROFILES);
    }

    /**
     * Create a detached, initialised RoadSpeedProfilesRecord
     */
    public RoadSpeedProfilesRecord(Integer roadSpeedProfileId, SpeedLimitEnforcementType speedLimitEnforcement, Integer maximumSpeed, Integer gradient) {
        super(RoadSpeedProfiles.ROAD_SPEED_PROFILES);

        setRoadSpeedProfileId(roadSpeedProfileId);
        setSpeedLimitEnforcement(speedLimitEnforcement);
        setMaximumSpeed(maximumSpeed);
        setGradient(gradient);
    }
}
