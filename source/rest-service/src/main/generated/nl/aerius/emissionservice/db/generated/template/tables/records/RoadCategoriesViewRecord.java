/*
 * This file is generated by jOOQ.
 */
package nl.aerius.emissionservice.db.generated.template.tables.records;


import nl.aerius.emissionservice.db.generated.public_.enums.SpeedLimitEnforcementType;
import nl.aerius.emissionservice.db.generated.template.tables.RoadCategoriesView;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.TableRecordImpl;


/**
 * View returning the road categories. This includes the emission factors and
 * stagnation factors per substance.
 * 
 * @file
 * source/database/src/main/sql/template/02-emission_factors/04-views/roads.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoadCategoriesViewRecord extends TableRecordImpl<RoadCategoriesViewRecord> implements Record14<Integer, String, String, String, String, String, String, SpeedLimitEnforcementType, Integer, Integer, Short, Short, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>template.road_categories_view.road_category_id</code>.
     */
    public void setRoadCategoryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_category_id</code>.
     */
    public Integer getRoadCategoryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>template.road_categories_view.road_area_code</code>.
     */
    public void setRoadAreaCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_area_code</code>.
     */
    public String getRoadAreaCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>template.road_categories_view.road_area_name</code>.
     */
    public void setRoadAreaName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_area_name</code>.
     */
    public String getRoadAreaName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>template.road_categories_view.road_type_code</code>.
     */
    public void setRoadTypeCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_type_code</code>.
     */
    public String getRoadTypeCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>template.road_categories_view.road_type_name</code>.
     */
    public void setRoadTypeName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_type_name</code>.
     */
    public String getRoadTypeName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>template.road_categories_view.road_vehicle_code</code>.
     */
    public void setRoadVehicleCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_vehicle_code</code>.
     */
    public String getRoadVehicleCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>template.road_categories_view.road_vehicle_name</code>.
     */
    public void setRoadVehicleName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_vehicle_name</code>.
     */
    public String getRoadVehicleName() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>template.road_categories_view.speed_limit_enforcement</code>.
     */
    public void setSpeedLimitEnforcement(SpeedLimitEnforcementType value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>template.road_categories_view.speed_limit_enforcement</code>.
     */
    public SpeedLimitEnforcementType getSpeedLimitEnforcement() {
        return (SpeedLimitEnforcementType) get(7);
    }

    /**
     * Setter for <code>template.road_categories_view.maximum_speed</code>.
     */
    public void setMaximumSpeed(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>template.road_categories_view.maximum_speed</code>.
     */
    public Integer getMaximumSpeed() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>template.road_categories_view.gradient</code>.
     */
    public void setGradient(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>template.road_categories_view.gradient</code>.
     */
    public Integer getGradient() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>template.road_categories_view.year</code>.
     */
    public void setYear(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>template.road_categories_view.year</code>.
     */
    public Short getYear() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>template.road_categories_view.substance_id</code>.
     */
    public void setSubstanceId(Short value) {
        set(11, value);
    }

    /**
     * Getter for <code>template.road_categories_view.substance_id</code>.
     */
    public Short getSubstanceId() {
        return (Short) get(11);
    }

    /**
     * Setter for <code>template.road_categories_view.emission_factor</code>.
     */
    public void setEmissionFactor(Double value) {
        set(12, value);
    }

    /**
     * Getter for <code>template.road_categories_view.emission_factor</code>.
     */
    public Double getEmissionFactor() {
        return (Double) get(12);
    }

    /**
     * Setter for
     * <code>template.road_categories_view.stagnated_emission_factor</code>.
     */
    public void setStagnatedEmissionFactor(Double value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>template.road_categories_view.stagnated_emission_factor</code>.
     */
    public Double getStagnatedEmissionFactor() {
        return (Double) get(13);
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, String, String, String, String, String, SpeedLimitEnforcementType, Integer, Integer, Short, Short, Double, Double> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, String, String, String, String, String, String, SpeedLimitEnforcementType, Integer, Integer, Short, Short, Double, Double> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_CATEGORY_ID;
    }

    @Override
    public Field<String> field2() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_AREA_CODE;
    }

    @Override
    public Field<String> field3() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_AREA_NAME;
    }

    @Override
    public Field<String> field4() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_TYPE_CODE;
    }

    @Override
    public Field<String> field5() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_TYPE_NAME;
    }

    @Override
    public Field<String> field6() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_VEHICLE_CODE;
    }

    @Override
    public Field<String> field7() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_VEHICLE_NAME;
    }

    @Override
    public Field<SpeedLimitEnforcementType> field8() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.SPEED_LIMIT_ENFORCEMENT;
    }

    @Override
    public Field<Integer> field9() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.MAXIMUM_SPEED;
    }

    @Override
    public Field<Integer> field10() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.GRADIENT;
    }

    @Override
    public Field<Short> field11() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.YEAR;
    }

    @Override
    public Field<Short> field12() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.SUBSTANCE_ID;
    }

    @Override
    public Field<Double> field13() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.EMISSION_FACTOR;
    }

    @Override
    public Field<Double> field14() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.STAGNATED_EMISSION_FACTOR;
    }

    @Override
    public Integer component1() {
        return getRoadCategoryId();
    }

    @Override
    public String component2() {
        return getRoadAreaCode();
    }

    @Override
    public String component3() {
        return getRoadAreaName();
    }

    @Override
    public String component4() {
        return getRoadTypeCode();
    }

    @Override
    public String component5() {
        return getRoadTypeName();
    }

    @Override
    public String component6() {
        return getRoadVehicleCode();
    }

    @Override
    public String component7() {
        return getRoadVehicleName();
    }

    @Override
    public SpeedLimitEnforcementType component8() {
        return getSpeedLimitEnforcement();
    }

    @Override
    public Integer component9() {
        return getMaximumSpeed();
    }

    @Override
    public Integer component10() {
        return getGradient();
    }

    @Override
    public Short component11() {
        return getYear();
    }

    @Override
    public Short component12() {
        return getSubstanceId();
    }

    @Override
    public Double component13() {
        return getEmissionFactor();
    }

    @Override
    public Double component14() {
        return getStagnatedEmissionFactor();
    }

    @Override
    public Integer value1() {
        return getRoadCategoryId();
    }

    @Override
    public String value2() {
        return getRoadAreaCode();
    }

    @Override
    public String value3() {
        return getRoadAreaName();
    }

    @Override
    public String value4() {
        return getRoadTypeCode();
    }

    @Override
    public String value5() {
        return getRoadTypeName();
    }

    @Override
    public String value6() {
        return getRoadVehicleCode();
    }

    @Override
    public String value7() {
        return getRoadVehicleName();
    }

    @Override
    public SpeedLimitEnforcementType value8() {
        return getSpeedLimitEnforcement();
    }

    @Override
    public Integer value9() {
        return getMaximumSpeed();
    }

    @Override
    public Integer value10() {
        return getGradient();
    }

    @Override
    public Short value11() {
        return getYear();
    }

    @Override
    public Short value12() {
        return getSubstanceId();
    }

    @Override
    public Double value13() {
        return getEmissionFactor();
    }

    @Override
    public Double value14() {
        return getStagnatedEmissionFactor();
    }

    @Override
    public RoadCategoriesViewRecord value1(Integer value) {
        setRoadCategoryId(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value2(String value) {
        setRoadAreaCode(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value3(String value) {
        setRoadAreaName(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value4(String value) {
        setRoadTypeCode(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value5(String value) {
        setRoadTypeName(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value6(String value) {
        setRoadVehicleCode(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value7(String value) {
        setRoadVehicleName(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value8(SpeedLimitEnforcementType value) {
        setSpeedLimitEnforcement(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value9(Integer value) {
        setMaximumSpeed(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value10(Integer value) {
        setGradient(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value11(Short value) {
        setYear(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value12(Short value) {
        setSubstanceId(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value13(Double value) {
        setEmissionFactor(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value14(Double value) {
        setStagnatedEmissionFactor(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, SpeedLimitEnforcementType value8, Integer value9, Integer value10, Short value11, Short value12, Double value13, Double value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoadCategoriesViewRecord
     */
    public RoadCategoriesViewRecord() {
        super(RoadCategoriesView.ROAD_CATEGORIES_VIEW);
    }

    /**
     * Create a detached, initialised RoadCategoriesViewRecord
     */
    public RoadCategoriesViewRecord(Integer roadCategoryId, String roadAreaCode, String roadAreaName, String roadTypeCode, String roadTypeName, String roadVehicleCode, String roadVehicleName, SpeedLimitEnforcementType speedLimitEnforcement, Integer maximumSpeed, Integer gradient, Short year, Short substanceId, Double emissionFactor, Double stagnatedEmissionFactor) {
        super(RoadCategoriesView.ROAD_CATEGORIES_VIEW);

        setRoadCategoryId(roadCategoryId);
        setRoadAreaCode(roadAreaCode);
        setRoadAreaName(roadAreaName);
        setRoadTypeCode(roadTypeCode);
        setRoadTypeName(roadTypeName);
        setRoadVehicleCode(roadVehicleCode);
        setRoadVehicleName(roadVehicleName);
        setSpeedLimitEnforcement(speedLimitEnforcement);
        setMaximumSpeed(maximumSpeed);
        setGradient(gradient);
        setYear(year);
        setSubstanceId(substanceId);
        setEmissionFactor(emissionFactor);
        setStagnatedEmissionFactor(stagnatedEmissionFactor);
    }
}
