/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables.records;


import nl.overheid.aerius.emissionservice.jooq.public_.enums.RoadType;
import nl.overheid.aerius.emissionservice.jooq.public_.enums.SpeedLimitEnforcementType;
import nl.overheid.aerius.emissionservice.jooq.template.tables.RoadSpeedProfiles;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Tabel met daarin de verschillende snelheidstyperingen per wegtype.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/roads.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoadSpeedProfilesRecord extends UpdatableRecordImpl<RoadSpeedProfilesRecord> implements Record5<Integer, RoadType, SpeedLimitEnforcementType, Integer, String> {

    private static final long serialVersionUID = 1940428655;

    /**
     * Setter for <code>template.road_speed_profiles.road_speed_profile_id</code>.
     */
    public void setRoadSpeedProfileId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.road_speed_profiles.road_speed_profile_id</code>.
     */
    public Integer getRoadSpeedProfileId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>template.road_speed_profiles.road_type</code>.
     */
    public void setRoadType(RoadType value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.road_speed_profiles.road_type</code>.
     */
    public RoadType getRoadType() {
        return (RoadType) get(1);
    }

    /**
     * Setter for <code>template.road_speed_profiles.speed_limit_enforcement</code>.
     */
    public void setSpeedLimitEnforcement(SpeedLimitEnforcementType value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.road_speed_profiles.speed_limit_enforcement</code>.
     */
    public SpeedLimitEnforcementType getSpeedLimitEnforcement() {
        return (SpeedLimitEnforcementType) get(2);
    }

    /**
     * Setter for <code>template.road_speed_profiles.maximum_speed</code>.
     */
    public void setMaximumSpeed(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.road_speed_profiles.maximum_speed</code>.
     */
    public Integer getMaximumSpeed() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>template.road_speed_profiles.name</code>.
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>template.road_speed_profiles.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, RoadType, SpeedLimitEnforcementType, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, RoadType, SpeedLimitEnforcementType, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RoadSpeedProfiles.ROAD_SPEED_PROFILES.ROAD_SPEED_PROFILE_ID;
    }

    @Override
    public Field<RoadType> field2() {
        return RoadSpeedProfiles.ROAD_SPEED_PROFILES.ROAD_TYPE;
    }

    @Override
    public Field<SpeedLimitEnforcementType> field3() {
        return RoadSpeedProfiles.ROAD_SPEED_PROFILES.SPEED_LIMIT_ENFORCEMENT;
    }

    @Override
    public Field<Integer> field4() {
        return RoadSpeedProfiles.ROAD_SPEED_PROFILES.MAXIMUM_SPEED;
    }

    @Override
    public Field<String> field5() {
        return RoadSpeedProfiles.ROAD_SPEED_PROFILES.NAME;
    }

    @Override
    public Integer component1() {
        return getRoadSpeedProfileId();
    }

    @Override
    public RoadType component2() {
        return getRoadType();
    }

    @Override
    public SpeedLimitEnforcementType component3() {
        return getSpeedLimitEnforcement();
    }

    @Override
    public Integer component4() {
        return getMaximumSpeed();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public Integer value1() {
        return getRoadSpeedProfileId();
    }

    @Override
    public RoadType value2() {
        return getRoadType();
    }

    @Override
    public SpeedLimitEnforcementType value3() {
        return getSpeedLimitEnforcement();
    }

    @Override
    public Integer value4() {
        return getMaximumSpeed();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public RoadSpeedProfilesRecord value1(Integer value) {
        setRoadSpeedProfileId(value);
        return this;
    }

    @Override
    public RoadSpeedProfilesRecord value2(RoadType value) {
        setRoadType(value);
        return this;
    }

    @Override
    public RoadSpeedProfilesRecord value3(SpeedLimitEnforcementType value) {
        setSpeedLimitEnforcement(value);
        return this;
    }

    @Override
    public RoadSpeedProfilesRecord value4(Integer value) {
        setMaximumSpeed(value);
        return this;
    }

    @Override
    public RoadSpeedProfilesRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public RoadSpeedProfilesRecord values(Integer value1, RoadType value2, SpeedLimitEnforcementType value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoadSpeedProfilesRecord
     */
    public RoadSpeedProfilesRecord() {
        super(RoadSpeedProfiles.ROAD_SPEED_PROFILES);
    }

    /**
     * Create a detached, initialised RoadSpeedProfilesRecord
     */
    public RoadSpeedProfilesRecord(Integer roadSpeedProfileId, RoadType roadType, SpeedLimitEnforcementType speedLimitEnforcement, Integer maximumSpeed, String name) {
        super(RoadSpeedProfiles.ROAD_SPEED_PROFILES);

        set(0, roadSpeedProfileId);
        set(1, roadType);
        set(2, speedLimitEnforcement);
        set(3, maximumSpeed);
        set(4, name);
    }
}
