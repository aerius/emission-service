/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables.records;


import nl.overheid.aerius.emissionservice.jooq.public_.enums.ShippingInlandLadenState;
import nl.overheid.aerius.emissionservice.jooq.public_.enums.ShippingInlandShipDirectionType;
import nl.overheid.aerius.emissionservice.jooq.template.tables.ShippingInlandCategoryEmissionFactors;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * De emissie factoren voor de verschillende soorten varende schepen.
 * Deze factoren zijn uniek per scheepstype, vaarwegtype, vaarrichtingen, 
 * ladingstoestand en stof.
 * 
 * Hierin worden de emissiefactoren per jaar weergegeven, emission_factor 
 * is de emissie factor tijdens varen (in kg/(kilometer * aantal schepen)) 
 * bij een bepaalde snelheid.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/shipping_inland.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShippingInlandCategoryEmissionFactorsRecord extends UpdatableRecordImpl<ShippingInlandCategoryEmissionFactorsRecord> implements Record7<Short, Integer, ShippingInlandShipDirectionType, ShippingInlandLadenState, Short, Short, Float> {

    private static final long serialVersionUID = -2012405393;

    /**
     * Setter for <code>template.shipping_inland_category_emission_factors.shipping_inland_category_id</code>.
     */
    public void setShippingInlandCategoryId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.shipping_inland_category_emission_factors.shipping_inland_category_id</code>.
     */
    public Short getShippingInlandCategoryId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>template.shipping_inland_category_emission_factors.shipping_inland_waterway_category_id</code>.
     */
    public void setShippingInlandWaterwayCategoryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.shipping_inland_category_emission_factors.shipping_inland_waterway_category_id</code>.
     */
    public Integer getShippingInlandWaterwayCategoryId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>template.shipping_inland_category_emission_factors.ship_direction</code>.
     */
    public void setShipDirection(ShippingInlandShipDirectionType value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.shipping_inland_category_emission_factors.ship_direction</code>.
     */
    public ShippingInlandShipDirectionType getShipDirection() {
        return (ShippingInlandShipDirectionType) get(2);
    }

    /**
     * Setter for <code>template.shipping_inland_category_emission_factors.laden_state</code>.
     */
    public void setLadenState(ShippingInlandLadenState value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.shipping_inland_category_emission_factors.laden_state</code>.
     */
    public ShippingInlandLadenState getLadenState() {
        return (ShippingInlandLadenState) get(3);
    }

    /**
     * Setter for <code>template.shipping_inland_category_emission_factors.year</code>.
     */
    public void setYear(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>template.shipping_inland_category_emission_factors.year</code>.
     */
    public Short getYear() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>template.shipping_inland_category_emission_factors.substance_id</code>.
     */
    public void setSubstanceId(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>template.shipping_inland_category_emission_factors.substance_id</code>.
     */
    public Short getSubstanceId() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>template.shipping_inland_category_emission_factors.emission_factor</code>.
     */
    public void setEmissionFactor(Float value) {
        set(6, value);
    }

    /**
     * Getter for <code>template.shipping_inland_category_emission_factors.emission_factor</code>.
     */
    public Float getEmissionFactor() {
        return (Float) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record6<Short, Integer, ShippingInlandShipDirectionType, ShippingInlandLadenState, Short, Short> key() {
        return (Record6) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Short, Integer, ShippingInlandShipDirectionType, ShippingInlandLadenState, Short, Short, Float> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Short, Integer, ShippingInlandShipDirectionType, ShippingInlandLadenState, Short, Short, Float> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS.SHIPPING_INLAND_CATEGORY_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS.SHIPPING_INLAND_WATERWAY_CATEGORY_ID;
    }

    @Override
    public Field<ShippingInlandShipDirectionType> field3() {
        return ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS.SHIP_DIRECTION;
    }

    @Override
    public Field<ShippingInlandLadenState> field4() {
        return ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS.LADEN_STATE;
    }

    @Override
    public Field<Short> field5() {
        return ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS.YEAR;
    }

    @Override
    public Field<Short> field6() {
        return ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS.SUBSTANCE_ID;
    }

    @Override
    public Field<Float> field7() {
        return ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS.EMISSION_FACTOR;
    }

    @Override
    public Short component1() {
        return getShippingInlandCategoryId();
    }

    @Override
    public Integer component2() {
        return getShippingInlandWaterwayCategoryId();
    }

    @Override
    public ShippingInlandShipDirectionType component3() {
        return getShipDirection();
    }

    @Override
    public ShippingInlandLadenState component4() {
        return getLadenState();
    }

    @Override
    public Short component5() {
        return getYear();
    }

    @Override
    public Short component6() {
        return getSubstanceId();
    }

    @Override
    public Float component7() {
        return getEmissionFactor();
    }

    @Override
    public Short value1() {
        return getShippingInlandCategoryId();
    }

    @Override
    public Integer value2() {
        return getShippingInlandWaterwayCategoryId();
    }

    @Override
    public ShippingInlandShipDirectionType value3() {
        return getShipDirection();
    }

    @Override
    public ShippingInlandLadenState value4() {
        return getLadenState();
    }

    @Override
    public Short value5() {
        return getYear();
    }

    @Override
    public Short value6() {
        return getSubstanceId();
    }

    @Override
    public Float value7() {
        return getEmissionFactor();
    }

    @Override
    public ShippingInlandCategoryEmissionFactorsRecord value1(Short value) {
        setShippingInlandCategoryId(value);
        return this;
    }

    @Override
    public ShippingInlandCategoryEmissionFactorsRecord value2(Integer value) {
        setShippingInlandWaterwayCategoryId(value);
        return this;
    }

    @Override
    public ShippingInlandCategoryEmissionFactorsRecord value3(ShippingInlandShipDirectionType value) {
        setShipDirection(value);
        return this;
    }

    @Override
    public ShippingInlandCategoryEmissionFactorsRecord value4(ShippingInlandLadenState value) {
        setLadenState(value);
        return this;
    }

    @Override
    public ShippingInlandCategoryEmissionFactorsRecord value5(Short value) {
        setYear(value);
        return this;
    }

    @Override
    public ShippingInlandCategoryEmissionFactorsRecord value6(Short value) {
        setSubstanceId(value);
        return this;
    }

    @Override
    public ShippingInlandCategoryEmissionFactorsRecord value7(Float value) {
        setEmissionFactor(value);
        return this;
    }

    @Override
    public ShippingInlandCategoryEmissionFactorsRecord values(Short value1, Integer value2, ShippingInlandShipDirectionType value3, ShippingInlandLadenState value4, Short value5, Short value6, Float value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShippingInlandCategoryEmissionFactorsRecord
     */
    public ShippingInlandCategoryEmissionFactorsRecord() {
        super(ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS);
    }

    /**
     * Create a detached, initialised ShippingInlandCategoryEmissionFactorsRecord
     */
    public ShippingInlandCategoryEmissionFactorsRecord(Short shippingInlandCategoryId, Integer shippingInlandWaterwayCategoryId, ShippingInlandShipDirectionType shipDirection, ShippingInlandLadenState ladenState, Short year, Short substanceId, Float emissionFactor) {
        super(ShippingInlandCategoryEmissionFactors.SHIPPING_INLAND_CATEGORY_EMISSION_FACTORS);

        set(0, shippingInlandCategoryId);
        set(1, shippingInlandWaterwayCategoryId);
        set(2, shipDirection);
        set(3, ladenState);
        set(4, year);
        set(5, substanceId);
        set(6, emissionFactor);
    }
}
