/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables.records;


import nl.overheid.aerius.emissionservice.jooq.template.tables.MachineryFuelTypes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * De verschillende soorten brandstof voor werktuigen.
 * @column density soortelijk gewicht in kg/liter.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/machinery_types.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachineryFuelTypesRecord extends UpdatableRecordImpl<MachineryFuelTypesRecord> implements Record4<Integer, String, String, Float> {

    private static final long serialVersionUID = 1175056913;

    /**
     * Setter for <code>template.machinery_fuel_types.machinery_fuel_type_id</code>.
     */
    public void setMachineryFuelTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.machinery_fuel_types.machinery_fuel_type_id</code>.
     */
    public Integer getMachineryFuelTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>template.machinery_fuel_types.code</code>.
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.machinery_fuel_types.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>template.machinery_fuel_types.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.machinery_fuel_types.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>template.machinery_fuel_types.density</code>.
     */
    public void setDensity(Float value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.machinery_fuel_types.density</code>.
     */
    public Float getDensity() {
        return (Float) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Float> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, Float> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MachineryFuelTypes.MACHINERY_FUEL_TYPES.MACHINERY_FUEL_TYPE_ID;
    }

    @Override
    public Field<String> field2() {
        return MachineryFuelTypes.MACHINERY_FUEL_TYPES.CODE;
    }

    @Override
    public Field<String> field3() {
        return MachineryFuelTypes.MACHINERY_FUEL_TYPES.NAME;
    }

    @Override
    public Field<Float> field4() {
        return MachineryFuelTypes.MACHINERY_FUEL_TYPES.DENSITY;
    }

    @Override
    public Integer component1() {
        return getMachineryFuelTypeId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Float component4() {
        return getDensity();
    }

    @Override
    public Integer value1() {
        return getMachineryFuelTypeId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Float value4() {
        return getDensity();
    }

    @Override
    public MachineryFuelTypesRecord value1(Integer value) {
        setMachineryFuelTypeId(value);
        return this;
    }

    @Override
    public MachineryFuelTypesRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public MachineryFuelTypesRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public MachineryFuelTypesRecord value4(Float value) {
        setDensity(value);
        return this;
    }

    @Override
    public MachineryFuelTypesRecord values(Integer value1, String value2, String value3, Float value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MachineryFuelTypesRecord
     */
    public MachineryFuelTypesRecord() {
        super(MachineryFuelTypes.MACHINERY_FUEL_TYPES);
    }

    /**
     * Create a detached, initialised MachineryFuelTypesRecord
     */
    public MachineryFuelTypesRecord(Integer machineryFuelTypeId, String code, String name, Float density) {
        super(MachineryFuelTypes.MACHINERY_FUEL_TYPES);

        set(0, machineryFuelTypeId);
        set(1, code);
        set(2, name);
        set(3, density);
    }
}
