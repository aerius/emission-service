/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables.records;


import nl.overheid.aerius.emissionservice.jooq.template.tables.MachineryFuelTypesToSectors;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Hiermee wordt expliciet een koppeling gemaakt tussen sectoren en brandstof-types.
 * 
 * Dit wordt gebruikt om het algemene werktuigtype 'Anders' samen te stellen 
 * door middel van de machinery_fuel_types_view.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/machinery_types.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachineryFuelTypesToSectorsRecord extends UpdatableRecordImpl<MachineryFuelTypesToSectorsRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1403267767;

    /**
     * Setter for <code>template.machinery_fuel_types_to_sectors.machinery_fuel_type_id</code>.
     */
    public void setMachineryFuelTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.machinery_fuel_types_to_sectors.machinery_fuel_type_id</code>.
     */
    public Integer getMachineryFuelTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>template.machinery_fuel_types_to_sectors.sector_id</code>.
     */
    public void setSectorId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.machinery_fuel_types_to_sectors.sector_id</code>.
     */
    public Integer getSectorId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MachineryFuelTypesToSectors.MACHINERY_FUEL_TYPES_TO_SECTORS.MACHINERY_FUEL_TYPE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return MachineryFuelTypesToSectors.MACHINERY_FUEL_TYPES_TO_SECTORS.SECTOR_ID;
    }

    @Override
    public Integer component1() {
        return getMachineryFuelTypeId();
    }

    @Override
    public Integer component2() {
        return getSectorId();
    }

    @Override
    public Integer value1() {
        return getMachineryFuelTypeId();
    }

    @Override
    public Integer value2() {
        return getSectorId();
    }

    @Override
    public MachineryFuelTypesToSectorsRecord value1(Integer value) {
        setMachineryFuelTypeId(value);
        return this;
    }

    @Override
    public MachineryFuelTypesToSectorsRecord value2(Integer value) {
        setSectorId(value);
        return this;
    }

    @Override
    public MachineryFuelTypesToSectorsRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MachineryFuelTypesToSectorsRecord
     */
    public MachineryFuelTypesToSectorsRecord() {
        super(MachineryFuelTypesToSectors.MACHINERY_FUEL_TYPES_TO_SECTORS);
    }

    /**
     * Create a detached, initialised MachineryFuelTypesToSectorsRecord
     */
    public MachineryFuelTypesToSectorsRecord(Integer machineryFuelTypeId, Integer sectorId) {
        super(MachineryFuelTypesToSectors.MACHINERY_FUEL_TYPES_TO_SECTORS);

        set(0, machineryFuelTypeId);
        set(1, sectorId);
    }
}
