/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables.records;


import nl.overheid.aerius.emissionservice.jooq.template.tables.ShippingMaritimeCategories;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * De categories van verschillende soorten schepen voor zeevaart.
 * In de naam wordt ook de tonnages aangegeven. De naam wordt verder gebruikt 
 * als identificatie van de categorie voor een gebruiker.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/shipping_maritime.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShippingMaritimeCategoriesRecord extends UpdatableRecordImpl<ShippingMaritimeCategoriesRecord> implements Record4<Short, String, String, String> {

    private static final long serialVersionUID = 1646081183;

    /**
     * Setter for <code>template.shipping_maritime_categories.shipping_maritime_category_id</code>.
     */
    public void setShippingMaritimeCategoryId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.shipping_maritime_categories.shipping_maritime_category_id</code>.
     */
    public Short getShippingMaritimeCategoryId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>template.shipping_maritime_categories.code</code>.
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.shipping_maritime_categories.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>template.shipping_maritime_categories.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.shipping_maritime_categories.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>template.shipping_maritime_categories.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.shipping_maritime_categories.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Short, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Short, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return ShippingMaritimeCategories.SHIPPING_MARITIME_CATEGORIES.SHIPPING_MARITIME_CATEGORY_ID;
    }

    @Override
    public Field<String> field2() {
        return ShippingMaritimeCategories.SHIPPING_MARITIME_CATEGORIES.CODE;
    }

    @Override
    public Field<String> field3() {
        return ShippingMaritimeCategories.SHIPPING_MARITIME_CATEGORIES.NAME;
    }

    @Override
    public Field<String> field4() {
        return ShippingMaritimeCategories.SHIPPING_MARITIME_CATEGORIES.DESCRIPTION;
    }

    @Override
    public Short component1() {
        return getShippingMaritimeCategoryId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Short value1() {
        return getShippingMaritimeCategoryId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public ShippingMaritimeCategoriesRecord value1(Short value) {
        setShippingMaritimeCategoryId(value);
        return this;
    }

    @Override
    public ShippingMaritimeCategoriesRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public ShippingMaritimeCategoriesRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ShippingMaritimeCategoriesRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ShippingMaritimeCategoriesRecord values(Short value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShippingMaritimeCategoriesRecord
     */
    public ShippingMaritimeCategoriesRecord() {
        super(ShippingMaritimeCategories.SHIPPING_MARITIME_CATEGORIES);
    }

    /**
     * Create a detached, initialised ShippingMaritimeCategoriesRecord
     */
    public ShippingMaritimeCategoriesRecord(Short shippingMaritimeCategoryId, String code, String name, String description) {
        super(ShippingMaritimeCategories.SHIPPING_MARITIME_CATEGORIES);

        set(0, shippingMaritimeCategoryId);
        set(1, code);
        set(2, name);
        set(3, description);
    }
}
