/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.public_.udt.records;


import java.math.BigDecimal;

import nl.overheid.aerius.emissionservice.jooq.public_.udt.AeKeyValueRs;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AeKeyValueRsRecord extends UDTRecordImpl<AeKeyValueRsRecord> implements Record2<BigDecimal, BigDecimal> {

    private static final long serialVersionUID = -1935576223;

    /**
     * Setter for <code>public.ae_key_value_rs.key</code>.
     */
    public void setKey(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ae_key_value_rs.key</code>.
     */
    public BigDecimal getKey() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>public.ae_key_value_rs.value</code>.
     */
    public void setValue(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ae_key_value_rs.value</code>.
     */
    public BigDecimal getValue() {
        return (BigDecimal) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<BigDecimal, BigDecimal> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<BigDecimal, BigDecimal> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return AeKeyValueRs.KEY;
    }

    @Override
    public Field<BigDecimal> field2() {
        return AeKeyValueRs.VALUE;
    }

    @Override
    public BigDecimal component1() {
        return getKey();
    }

    @Override
    public BigDecimal component2() {
        return getValue();
    }

    @Override
    public BigDecimal value1() {
        return getKey();
    }

    @Override
    public BigDecimal value2() {
        return getValue();
    }

    @Override
    public AeKeyValueRsRecord value1(BigDecimal value) {
        setKey(value);
        return this;
    }

    @Override
    public AeKeyValueRsRecord value2(BigDecimal value) {
        setValue(value);
        return this;
    }

    @Override
    public AeKeyValueRsRecord values(BigDecimal value1, BigDecimal value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AeKeyValueRsRecord
     */
    public AeKeyValueRsRecord() {
        super(AeKeyValueRs.AE_KEY_VALUE_RS);
    }

    /**
     * Create a detached, initialised AeKeyValueRsRecord
     */
    public AeKeyValueRsRecord(BigDecimal key, BigDecimal value) {
        super(AeKeyValueRs.AE_KEY_VALUE_RS);

        set(0, key);
        set(1, value);
    }
}
