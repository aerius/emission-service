/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables.records;


import nl.overheid.aerius.emissionservice.jooq.public_.enums.RoadType;
import nl.overheid.aerius.emissionservice.jooq.public_.enums.SpeedLimitEnforcementType;
import nl.overheid.aerius.emissionservice.jooq.public_.enums.VehicleType;
import nl.overheid.aerius.emissionservice.jooq.template.tables.RoadCategoriesView;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.TableRecordImpl;


/**
 * View retourneert de categorieen voor wegen. Dit bevat onder andere de emissiefactoren 
 * en stagnatiefactoren.
 * Zie road_categories en road_category_emission_factors voor meer informatie.
 * 
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/04-views/roads.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoadCategoriesViewRecord extends TableRecordImpl<RoadCategoriesViewRecord> implements Record14<Integer, String, String, VehicleType, RoadType, Integer, Integer, SpeedLimitEnforcementType, Integer, String, Short, Short, Double, Double> {

    private static final long serialVersionUID = 1723391145;

    /**
     * Setter for <code>template.road_categories_view.road_category_id</code>.
     */
    public void setRoadCategoryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_category_id</code>.
     */
    public Integer getRoadCategoryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>template.road_categories_view.code</code>.
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.road_categories_view.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>template.road_categories_view.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.road_categories_view.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>template.road_categories_view.vehicle_type</code>.
     */
    public void setVehicleType(VehicleType value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.road_categories_view.vehicle_type</code>.
     */
    public VehicleType getVehicleType() {
        return (VehicleType) get(3);
    }

    /**
     * Setter for <code>template.road_categories_view.road_type</code>.
     */
    public void setRoadType(RoadType value) {
        set(4, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_type</code>.
     */
    public RoadType getRoadType() {
        return (RoadType) get(4);
    }

    /**
     * Setter for <code>template.road_categories_view.gcn_sector_id</code>.
     */
    public void setGcnSectorId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>template.road_categories_view.gcn_sector_id</code>.
     */
    public Integer getGcnSectorId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>template.road_categories_view.road_speed_profile_id</code>.
     */
    public void setRoadSpeedProfileId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_speed_profile_id</code>.
     */
    public Integer getRoadSpeedProfileId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>template.road_categories_view.speed_limit_enforcement</code>.
     */
    public void setSpeedLimitEnforcement(SpeedLimitEnforcementType value) {
        set(7, value);
    }

    /**
     * Getter for <code>template.road_categories_view.speed_limit_enforcement</code>.
     */
    public SpeedLimitEnforcementType getSpeedLimitEnforcement() {
        return (SpeedLimitEnforcementType) get(7);
    }

    /**
     * Setter for <code>template.road_categories_view.maximum_speed</code>.
     */
    public void setMaximumSpeed(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>template.road_categories_view.maximum_speed</code>.
     */
    public Integer getMaximumSpeed() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>template.road_categories_view.road_speed_profile_name</code>.
     */
    public void setRoadSpeedProfileName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>template.road_categories_view.road_speed_profile_name</code>.
     */
    public String getRoadSpeedProfileName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>template.road_categories_view.year</code>.
     */
    public void setYear(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>template.road_categories_view.year</code>.
     */
    public Short getYear() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>template.road_categories_view.substance_id</code>.
     */
    public void setSubstanceId(Short value) {
        set(11, value);
    }

    /**
     * Getter for <code>template.road_categories_view.substance_id</code>.
     */
    public Short getSubstanceId() {
        return (Short) get(11);
    }

    /**
     * Setter for <code>template.road_categories_view.emission_factor</code>.
     */
    public void setEmissionFactor(Double value) {
        set(12, value);
    }

    /**
     * Getter for <code>template.road_categories_view.emission_factor</code>.
     */
    public Double getEmissionFactor() {
        return (Double) get(12);
    }

    /**
     * Setter for <code>template.road_categories_view.stagnated_emission_factor</code>.
     */
    public void setStagnatedEmissionFactor(Double value) {
        set(13, value);
    }

    /**
     * Getter for <code>template.road_categories_view.stagnated_emission_factor</code>.
     */
    public Double getStagnatedEmissionFactor() {
        return (Double) get(13);
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, String, VehicleType, RoadType, Integer, Integer, SpeedLimitEnforcementType, Integer, String, Short, Short, Double, Double> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, String, String, VehicleType, RoadType, Integer, Integer, SpeedLimitEnforcementType, Integer, String, Short, Short, Double, Double> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_CATEGORY_ID;
    }

    @Override
    public Field<String> field2() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.CODE;
    }

    @Override
    public Field<String> field3() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.NAME;
    }

    @Override
    public Field<VehicleType> field4() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.VEHICLE_TYPE;
    }

    @Override
    public Field<RoadType> field5() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_TYPE;
    }

    @Override
    public Field<Integer> field6() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.GCN_SECTOR_ID;
    }

    @Override
    public Field<Integer> field7() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_SPEED_PROFILE_ID;
    }

    @Override
    public Field<SpeedLimitEnforcementType> field8() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.SPEED_LIMIT_ENFORCEMENT;
    }

    @Override
    public Field<Integer> field9() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.MAXIMUM_SPEED;
    }

    @Override
    public Field<String> field10() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.ROAD_SPEED_PROFILE_NAME;
    }

    @Override
    public Field<Short> field11() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.YEAR;
    }

    @Override
    public Field<Short> field12() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.SUBSTANCE_ID;
    }

    @Override
    public Field<Double> field13() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.EMISSION_FACTOR;
    }

    @Override
    public Field<Double> field14() {
        return RoadCategoriesView.ROAD_CATEGORIES_VIEW.STAGNATED_EMISSION_FACTOR;
    }

    @Override
    public Integer component1() {
        return getRoadCategoryId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public VehicleType component4() {
        return getVehicleType();
    }

    @Override
    public RoadType component5() {
        return getRoadType();
    }

    @Override
    public Integer component6() {
        return getGcnSectorId();
    }

    @Override
    public Integer component7() {
        return getRoadSpeedProfileId();
    }

    @Override
    public SpeedLimitEnforcementType component8() {
        return getSpeedLimitEnforcement();
    }

    @Override
    public Integer component9() {
        return getMaximumSpeed();
    }

    @Override
    public String component10() {
        return getRoadSpeedProfileName();
    }

    @Override
    public Short component11() {
        return getYear();
    }

    @Override
    public Short component12() {
        return getSubstanceId();
    }

    @Override
    public Double component13() {
        return getEmissionFactor();
    }

    @Override
    public Double component14() {
        return getStagnatedEmissionFactor();
    }

    @Override
    public Integer value1() {
        return getRoadCategoryId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public VehicleType value4() {
        return getVehicleType();
    }

    @Override
    public RoadType value5() {
        return getRoadType();
    }

    @Override
    public Integer value6() {
        return getGcnSectorId();
    }

    @Override
    public Integer value7() {
        return getRoadSpeedProfileId();
    }

    @Override
    public SpeedLimitEnforcementType value8() {
        return getSpeedLimitEnforcement();
    }

    @Override
    public Integer value9() {
        return getMaximumSpeed();
    }

    @Override
    public String value10() {
        return getRoadSpeedProfileName();
    }

    @Override
    public Short value11() {
        return getYear();
    }

    @Override
    public Short value12() {
        return getSubstanceId();
    }

    @Override
    public Double value13() {
        return getEmissionFactor();
    }

    @Override
    public Double value14() {
        return getStagnatedEmissionFactor();
    }

    @Override
    public RoadCategoriesViewRecord value1(Integer value) {
        setRoadCategoryId(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value4(VehicleType value) {
        setVehicleType(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value5(RoadType value) {
        setRoadType(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value6(Integer value) {
        setGcnSectorId(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value7(Integer value) {
        setRoadSpeedProfileId(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value8(SpeedLimitEnforcementType value) {
        setSpeedLimitEnforcement(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value9(Integer value) {
        setMaximumSpeed(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value10(String value) {
        setRoadSpeedProfileName(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value11(Short value) {
        setYear(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value12(Short value) {
        setSubstanceId(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value13(Double value) {
        setEmissionFactor(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord value14(Double value) {
        setStagnatedEmissionFactor(value);
        return this;
    }

    @Override
    public RoadCategoriesViewRecord values(Integer value1, String value2, String value3, VehicleType value4, RoadType value5, Integer value6, Integer value7, SpeedLimitEnforcementType value8, Integer value9, String value10, Short value11, Short value12, Double value13, Double value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoadCategoriesViewRecord
     */
    public RoadCategoriesViewRecord() {
        super(RoadCategoriesView.ROAD_CATEGORIES_VIEW);
    }

    /**
     * Create a detached, initialised RoadCategoriesViewRecord
     */
    public RoadCategoriesViewRecord(Integer roadCategoryId, String code, String name, VehicleType vehicleType, RoadType roadType, Integer gcnSectorId, Integer roadSpeedProfileId, SpeedLimitEnforcementType speedLimitEnforcement, Integer maximumSpeed, String roadSpeedProfileName, Short year, Short substanceId, Double emissionFactor, Double stagnatedEmissionFactor) {
        super(RoadCategoriesView.ROAD_CATEGORIES_VIEW);

        set(0, roadCategoryId);
        set(1, code);
        set(2, name);
        set(3, vehicleType);
        set(4, roadType);
        set(5, gcnSectorId);
        set(6, roadSpeedProfileId);
        set(7, speedLimitEnforcement);
        set(8, maximumSpeed);
        set(9, roadSpeedProfileName);
        set(10, year);
        set(11, substanceId);
        set(12, emissionFactor);
        set(13, stagnatedEmissionFactor);
    }
}
