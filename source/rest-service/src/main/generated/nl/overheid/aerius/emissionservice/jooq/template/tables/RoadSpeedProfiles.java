/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables;


import java.util.Arrays;
import java.util.List;

import nl.overheid.aerius.emissionservice.jooq.public_.enums.RoadType;
import nl.overheid.aerius.emissionservice.jooq.public_.enums.SpeedLimitEnforcementType;
import nl.overheid.aerius.emissionservice.jooq.template.Keys;
import nl.overheid.aerius.emissionservice.jooq.template.Template;
import nl.overheid.aerius.emissionservice.jooq.template.tables.records.RoadSpeedProfilesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Tabel met daarin de verschillende snelheidstyperingen per wegtype.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/roads.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoadSpeedProfiles extends TableImpl<RoadSpeedProfilesRecord> {

    private static final long serialVersionUID = -1908204223;

    /**
     * The reference instance of <code>template.road_speed_profiles</code>
     */
    public static final RoadSpeedProfiles ROAD_SPEED_PROFILES = new RoadSpeedProfiles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoadSpeedProfilesRecord> getRecordType() {
        return RoadSpeedProfilesRecord.class;
    }

    /**
     * The column <code>template.road_speed_profiles.road_speed_profile_id</code>.
     */
    public final TableField<RoadSpeedProfilesRecord, Integer> ROAD_SPEED_PROFILE_ID = createField(DSL.name("road_speed_profile_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>template.road_speed_profiles.road_type</code>.
     */
    public final TableField<RoadSpeedProfilesRecord, RoadType> ROAD_TYPE = createField(DSL.name("road_type"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false).asEnumDataType(nl.overheid.aerius.emissionservice.jooq.public_.enums.RoadType.class), this, "");

    /**
     * The column <code>template.road_speed_profiles.speed_limit_enforcement</code>.
     */
    public final TableField<RoadSpeedProfilesRecord, SpeedLimitEnforcementType> SPEED_LIMIT_ENFORCEMENT = createField(DSL.name("speed_limit_enforcement"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false).asEnumDataType(nl.overheid.aerius.emissionservice.jooq.public_.enums.SpeedLimitEnforcementType.class), this, "");

    /**
     * The column <code>template.road_speed_profiles.maximum_speed</code>.
     */
    public final TableField<RoadSpeedProfilesRecord, Integer> MAXIMUM_SPEED = createField(DSL.name("maximum_speed"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>template.road_speed_profiles.name</code>.
     */
    public final TableField<RoadSpeedProfilesRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>template.road_speed_profiles</code> table reference
     */
    public RoadSpeedProfiles() {
        this(DSL.name("road_speed_profiles"), null);
    }

    /**
     * Create an aliased <code>template.road_speed_profiles</code> table reference
     */
    public RoadSpeedProfiles(String alias) {
        this(DSL.name(alias), ROAD_SPEED_PROFILES);
    }

    /**
     * Create an aliased <code>template.road_speed_profiles</code> table reference
     */
    public RoadSpeedProfiles(Name alias) {
        this(alias, ROAD_SPEED_PROFILES);
    }

    private RoadSpeedProfiles(Name alias, Table<RoadSpeedProfilesRecord> aliased) {
        this(alias, aliased, null);
    }

    private RoadSpeedProfiles(Name alias, Table<RoadSpeedProfilesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Tabel met daarin de verschillende snelheidstyperingen per wegtype.\r\n\r\n@file source/database/src/main/sql/template/02_emission_factors/02-tables/roads.sql"), TableOptions.table());
    }

    public <O extends Record> RoadSpeedProfiles(Table<O> child, ForeignKey<O, RoadSpeedProfilesRecord> key) {
        super(child, key, ROAD_SPEED_PROFILES);
    }

    @Override
    public Schema getSchema() {
        return Template.TEMPLATE;
    }

    @Override
    public UniqueKey<RoadSpeedProfilesRecord> getPrimaryKey() {
        return Keys.ROAD_SPEED_PROFILES_PKEY;
    }

    @Override
    public List<UniqueKey<RoadSpeedProfilesRecord>> getKeys() {
        return Arrays.<UniqueKey<RoadSpeedProfilesRecord>>asList(Keys.ROAD_SPEED_PROFILES_PKEY);
    }

    @Override
    public RoadSpeedProfiles as(String alias) {
        return new RoadSpeedProfiles(DSL.name(alias), this);
    }

    @Override
    public RoadSpeedProfiles as(Name alias) {
        return new RoadSpeedProfiles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RoadSpeedProfiles rename(String name) {
        return new RoadSpeedProfiles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RoadSpeedProfiles rename(Name name) {
        return new RoadSpeedProfiles(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, RoadType, SpeedLimitEnforcementType, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
