/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables;


import java.util.Arrays;
import java.util.List;

import nl.overheid.aerius.emissionservice.jooq.template.Keys;
import nl.overheid.aerius.emissionservice.jooq.template.Template;
import nl.overheid.aerius.emissionservice.jooq.template.tables.records.FarmReductiveLodgingSystemsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Emissiereducerende staltechnieken. Dit zijn staltechnieken die zorgen voor 
 * minder emissies en gestapeld kunnen worden op een stalsysteem (farm_lodging_type).
 * 
 * Deze reducerende staltechnieken zijn afgeleid uit de RAV-code lijst.
 * Ook aangegeven is of het een luchtwasser is.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/farms.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FarmReductiveLodgingSystems extends TableImpl<FarmReductiveLodgingSystemsRecord> {

    private static final long serialVersionUID = -332985164;

    /**
     * The reference instance of <code>template.farm_reductive_lodging_systems</code>
     */
    public static final FarmReductiveLodgingSystems FARM_REDUCTIVE_LODGING_SYSTEMS = new FarmReductiveLodgingSystems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FarmReductiveLodgingSystemsRecord> getRecordType() {
        return FarmReductiveLodgingSystemsRecord.class;
    }

    /**
     * The column <code>template.farm_reductive_lodging_systems.farm_reductive_lodging_system_id</code>.
     */
    public final TableField<FarmReductiveLodgingSystemsRecord, Integer> FARM_REDUCTIVE_LODGING_SYSTEM_ID = createField(DSL.name("farm_reductive_lodging_system_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>template.farm_reductive_lodging_systems.farm_animal_category_id</code>.
     */
    public final TableField<FarmReductiveLodgingSystemsRecord, Integer> FARM_ANIMAL_CATEGORY_ID = createField(DSL.name("farm_animal_category_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>template.farm_reductive_lodging_systems.code</code>.
     */
    public final TableField<FarmReductiveLodgingSystemsRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>template.farm_reductive_lodging_systems.name</code>.
     */
    public final TableField<FarmReductiveLodgingSystemsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>template.farm_reductive_lodging_systems.description</code>.
     */
    public final TableField<FarmReductiveLodgingSystemsRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>template.farm_reductive_lodging_systems.scrubber</code>.
     */
    public final TableField<FarmReductiveLodgingSystemsRecord, Boolean> SCRUBBER = createField(DSL.name("scrubber"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>template.farm_reductive_lodging_systems</code> table reference
     */
    public FarmReductiveLodgingSystems() {
        this(DSL.name("farm_reductive_lodging_systems"), null);
    }

    /**
     * Create an aliased <code>template.farm_reductive_lodging_systems</code> table reference
     */
    public FarmReductiveLodgingSystems(String alias) {
        this(DSL.name(alias), FARM_REDUCTIVE_LODGING_SYSTEMS);
    }

    /**
     * Create an aliased <code>template.farm_reductive_lodging_systems</code> table reference
     */
    public FarmReductiveLodgingSystems(Name alias) {
        this(alias, FARM_REDUCTIVE_LODGING_SYSTEMS);
    }

    private FarmReductiveLodgingSystems(Name alias, Table<FarmReductiveLodgingSystemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FarmReductiveLodgingSystems(Name alias, Table<FarmReductiveLodgingSystemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Emissiereducerende staltechnieken. Dit zijn staltechnieken die zorgen voor minder emissies en gestapeld kunnen worden op een stalsysteem (farm_lodging_type).\r\nDeze reducerende staltechnieken zijn afgeleid uit de RAV-code lijst.\r\nOok aangegeven is of het een luchtwasser is.\r\n\r\n@file source/database/src/main/sql/template/02_emission_factors/02-tables/farms.sql"), TableOptions.table());
    }

    public <O extends Record> FarmReductiveLodgingSystems(Table<O> child, ForeignKey<O, FarmReductiveLodgingSystemsRecord> key) {
        super(child, key, FARM_REDUCTIVE_LODGING_SYSTEMS);
    }

    @Override
    public Schema getSchema() {
        return Template.TEMPLATE;
    }

    @Override
    public UniqueKey<FarmReductiveLodgingSystemsRecord> getPrimaryKey() {
        return Keys.FARM_REDUCTIVE_LODGING_SYSTEMS_PKEY;
    }

    @Override
    public List<UniqueKey<FarmReductiveLodgingSystemsRecord>> getKeys() {
        return Arrays.<UniqueKey<FarmReductiveLodgingSystemsRecord>>asList(Keys.FARM_REDUCTIVE_LODGING_SYSTEMS_PKEY, Keys.FARM_REDUCTIVE_LODGING_SYSTEMS_CODE_KEY, Keys.FARM_REDUCTIVE_LODGING_SYSTEMS_NAME_KEY);
    }

    @Override
    public List<ForeignKey<FarmReductiveLodgingSystemsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FarmReductiveLodgingSystemsRecord, ?>>asList(Keys.FARM_REDUCTIVE_LODGING_SYSTEMS__FARM_REDUCTIVE_LODGING_SYSTEMS_FKEY_FARM_ANIMAL_CATEGORIES);
    }

    public FarmAnimalCategories farmAnimalCategories() {
        return new FarmAnimalCategories(this, Keys.FARM_REDUCTIVE_LODGING_SYSTEMS__FARM_REDUCTIVE_LODGING_SYSTEMS_FKEY_FARM_ANIMAL_CATEGORIES);
    }

    @Override
    public FarmReductiveLodgingSystems as(String alias) {
        return new FarmReductiveLodgingSystems(DSL.name(alias), this);
    }

    @Override
    public FarmReductiveLodgingSystems as(Name alias) {
        return new FarmReductiveLodgingSystems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FarmReductiveLodgingSystems rename(String name) {
        return new FarmReductiveLodgingSystems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FarmReductiveLodgingSystems rename(Name name) {
        return new FarmReductiveLodgingSystems(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, String, String, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
