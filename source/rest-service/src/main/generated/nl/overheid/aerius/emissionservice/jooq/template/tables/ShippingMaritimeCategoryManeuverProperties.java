/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables;


import java.util.Arrays;
import java.util.List;

import nl.overheid.aerius.emissionservice.jooq.template.Keys;
import nl.overheid.aerius.emissionservice.jooq.template.Template;
import nl.overheid.aerius.emissionservice.jooq.template.tables.records.ShippingMaritimeCategoryManeuverPropertiesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Manoeuvreer-eigenschappen per zeevaart schip.
 * 
 * Maneuver_factor is de factor waarmee de emissie in het beginstuk van de 
 * vaarroute moet worden opgehoogd vanwege het manouvreren van het schip bij 
 * de kade.
 * Maneuver_length is de lengte van de route waarbij deze factor gebruikt 
 * moet worden.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/shipping_maritime.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShippingMaritimeCategoryManeuverProperties extends TableImpl<ShippingMaritimeCategoryManeuverPropertiesRecord> {

    private static final long serialVersionUID = 1819759129;

    /**
     * The reference instance of <code>template.shipping_maritime_category_maneuver_properties</code>
     */
    public static final ShippingMaritimeCategoryManeuverProperties SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES = new ShippingMaritimeCategoryManeuverProperties();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShippingMaritimeCategoryManeuverPropertiesRecord> getRecordType() {
        return ShippingMaritimeCategoryManeuverPropertiesRecord.class;
    }

    /**
     * The column <code>template.shipping_maritime_category_maneuver_properties.shipping_maritime_category_id</code>.
     */
    public final TableField<ShippingMaritimeCategoryManeuverPropertiesRecord, Short> SHIPPING_MARITIME_CATEGORY_ID = createField(DSL.name("shipping_maritime_category_id"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>template.shipping_maritime_category_maneuver_properties.maneuver_factor</code>.
     */
    public final TableField<ShippingMaritimeCategoryManeuverPropertiesRecord, Float> MANEUVER_FACTOR = createField(DSL.name("maneuver_factor"), org.jooq.impl.SQLDataType.REAL.nullable(false), this, "");

    /**
     * The column <code>template.shipping_maritime_category_maneuver_properties.maneuver_length</code>.
     */
    public final TableField<ShippingMaritimeCategoryManeuverPropertiesRecord, Float> MANEUVER_LENGTH = createField(DSL.name("maneuver_length"), org.jooq.impl.SQLDataType.REAL.nullable(false), this, "");

    /**
     * Create a <code>template.shipping_maritime_category_maneuver_properties</code> table reference
     */
    public ShippingMaritimeCategoryManeuverProperties() {
        this(DSL.name("shipping_maritime_category_maneuver_properties"), null);
    }

    /**
     * Create an aliased <code>template.shipping_maritime_category_maneuver_properties</code> table reference
     */
    public ShippingMaritimeCategoryManeuverProperties(String alias) {
        this(DSL.name(alias), SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES);
    }

    /**
     * Create an aliased <code>template.shipping_maritime_category_maneuver_properties</code> table reference
     */
    public ShippingMaritimeCategoryManeuverProperties(Name alias) {
        this(alias, SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES);
    }

    private ShippingMaritimeCategoryManeuverProperties(Name alias, Table<ShippingMaritimeCategoryManeuverPropertiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShippingMaritimeCategoryManeuverProperties(Name alias, Table<ShippingMaritimeCategoryManeuverPropertiesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Manoeuvreer-eigenschappen per zeevaart schip.\r\n\r\nManeuver_factor is de factor waarmee de emissie in het beginstuk van de vaarroute moet worden opgehoogd vanwege het manouvreren van het schip bij de kade.\r\nManeuver_length is de lengte van de route waarbij deze factor gebruikt moet worden.\r\n\r\n@file source/database/src/main/sql/template/02_emission_factors/02-tables/shipping_maritime.sql"), TableOptions.table());
    }

    public <O extends Record> ShippingMaritimeCategoryManeuverProperties(Table<O> child, ForeignKey<O, ShippingMaritimeCategoryManeuverPropertiesRecord> key) {
        super(child, key, SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES);
    }

    @Override
    public Schema getSchema() {
        return Template.TEMPLATE;
    }

    @Override
    public UniqueKey<ShippingMaritimeCategoryManeuverPropertiesRecord> getPrimaryKey() {
        return Keys.SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES_PKEY;
    }

    @Override
    public List<UniqueKey<ShippingMaritimeCategoryManeuverPropertiesRecord>> getKeys() {
        return Arrays.<UniqueKey<ShippingMaritimeCategoryManeuverPropertiesRecord>>asList(Keys.SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES_PKEY);
    }

    @Override
    public List<ForeignKey<ShippingMaritimeCategoryManeuverPropertiesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ShippingMaritimeCategoryManeuverPropertiesRecord, ?>>asList(Keys.SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES__SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES_FKEY_CATEGORIES);
    }

    public ShippingMaritimeCategories shippingMaritimeCategories() {
        return new ShippingMaritimeCategories(this, Keys.SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES__SHIPPING_MARITIME_CATEGORY_MANEUVER_PROPERTIES_FKEY_CATEGORIES);
    }

    @Override
    public ShippingMaritimeCategoryManeuverProperties as(String alias) {
        return new ShippingMaritimeCategoryManeuverProperties(DSL.name(alias), this);
    }

    @Override
    public ShippingMaritimeCategoryManeuverProperties as(Name alias) {
        return new ShippingMaritimeCategoryManeuverProperties(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShippingMaritimeCategoryManeuverProperties rename(String name) {
        return new ShippingMaritimeCategoryManeuverProperties(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShippingMaritimeCategoryManeuverProperties rename(Name name) {
        return new ShippingMaritimeCategoryManeuverProperties(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Short, Float, Float> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
