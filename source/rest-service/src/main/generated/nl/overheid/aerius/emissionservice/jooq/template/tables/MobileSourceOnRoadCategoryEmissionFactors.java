/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables;


import java.util.Arrays;
import java.util.List;

import nl.overheid.aerius.emissionservice.jooq.public_.enums.RoadType;
import nl.overheid.aerius.emissionservice.jooq.public_.tables.Substances;
import nl.overheid.aerius.emissionservice.jooq.template.Keys;
import nl.overheid.aerius.emissionservice.jooq.template.Template;
import nl.overheid.aerius.emissionservice.jooq.template.tables.records.MobileSourceOnRoadCategoryEmissionFactorsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * De emissie factoren voor verschillende soorten onroad mobiele bronnen.
 * 
 * De emissie factoren zijn hier in kg/km/voertuig.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/mobile_sources.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MobileSourceOnRoadCategoryEmissionFactors extends TableImpl<MobileSourceOnRoadCategoryEmissionFactorsRecord> {

    private static final long serialVersionUID = -240668060;

    /**
     * The reference instance of <code>template.mobile_source_on_road_category_emission_factors</code>
     */
    public static final MobileSourceOnRoadCategoryEmissionFactors MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS = new MobileSourceOnRoadCategoryEmissionFactors();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MobileSourceOnRoadCategoryEmissionFactorsRecord> getRecordType() {
        return MobileSourceOnRoadCategoryEmissionFactorsRecord.class;
    }

    /**
     * The column <code>template.mobile_source_on_road_category_emission_factors.mobile_source_on_road_category_id</code>.
     */
    public final TableField<MobileSourceOnRoadCategoryEmissionFactorsRecord, Short> MOBILE_SOURCE_ON_ROAD_CATEGORY_ID = createField(DSL.name("mobile_source_on_road_category_id"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>template.mobile_source_on_road_category_emission_factors.road_type</code>.
     */
    public final TableField<MobileSourceOnRoadCategoryEmissionFactorsRecord, RoadType> ROAD_TYPE = createField(DSL.name("road_type"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false).asEnumDataType(nl.overheid.aerius.emissionservice.jooq.public_.enums.RoadType.class), this, "");

    /**
     * The column <code>template.mobile_source_on_road_category_emission_factors.substance_id</code>.
     */
    public final TableField<MobileSourceOnRoadCategoryEmissionFactorsRecord, Short> SUBSTANCE_ID = createField(DSL.name("substance_id"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>template.mobile_source_on_road_category_emission_factors.emission_factor</code>.
     */
    public final TableField<MobileSourceOnRoadCategoryEmissionFactorsRecord, Float> EMISSION_FACTOR = createField(DSL.name("emission_factor"), org.jooq.impl.SQLDataType.REAL.nullable(false), this, "");

    /**
     * Create a <code>template.mobile_source_on_road_category_emission_factors</code> table reference
     */
    public MobileSourceOnRoadCategoryEmissionFactors() {
        this(DSL.name("mobile_source_on_road_category_emission_factors"), null);
    }

    /**
     * Create an aliased <code>template.mobile_source_on_road_category_emission_factors</code> table reference
     */
    public MobileSourceOnRoadCategoryEmissionFactors(String alias) {
        this(DSL.name(alias), MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS);
    }

    /**
     * Create an aliased <code>template.mobile_source_on_road_category_emission_factors</code> table reference
     */
    public MobileSourceOnRoadCategoryEmissionFactors(Name alias) {
        this(alias, MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS);
    }

    private MobileSourceOnRoadCategoryEmissionFactors(Name alias, Table<MobileSourceOnRoadCategoryEmissionFactorsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MobileSourceOnRoadCategoryEmissionFactors(Name alias, Table<MobileSourceOnRoadCategoryEmissionFactorsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("De emissie factoren voor verschillende soorten onroad mobiele bronnen.\r\nDe emissie factoren zijn hier in kg/km/voertuig.\r\n\r\n@file source/database/src/main/sql/template/02_emission_factors/02-tables/mobile_sources.sql"), TableOptions.table());
    }

    public <O extends Record> MobileSourceOnRoadCategoryEmissionFactors(Table<O> child, ForeignKey<O, MobileSourceOnRoadCategoryEmissionFactorsRecord> key) {
        super(child, key, MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS);
    }

    @Override
    public Schema getSchema() {
        return Template.TEMPLATE;
    }

    @Override
    public UniqueKey<MobileSourceOnRoadCategoryEmissionFactorsRecord> getPrimaryKey() {
        return Keys.MOBILE_SOURCE_ON_ROAD_EFAC_PKEY;
    }

    @Override
    public List<UniqueKey<MobileSourceOnRoadCategoryEmissionFactorsRecord>> getKeys() {
        return Arrays.<UniqueKey<MobileSourceOnRoadCategoryEmissionFactorsRecord>>asList(Keys.MOBILE_SOURCE_ON_ROAD_EFAC_PKEY);
    }

    @Override
    public List<ForeignKey<MobileSourceOnRoadCategoryEmissionFactorsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MobileSourceOnRoadCategoryEmissionFactorsRecord, ?>>asList(Keys.MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS__MOBILE_SOURCE_ON_ROAD_EFAC_FKEY_MOBILE_ON_ROAD_CAT, Keys.MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS__MOBILE_SOURCE_ON_ROAD_EFAC_FKEY_SUBSTANCES);
    }

    public MobileSourceOnRoadCategories mobileSourceOnRoadCategories() {
        return new MobileSourceOnRoadCategories(this, Keys.MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS__MOBILE_SOURCE_ON_ROAD_EFAC_FKEY_MOBILE_ON_ROAD_CAT);
    }

    public Substances substances() {
        return new Substances(this, Keys.MOBILE_SOURCE_ON_ROAD_CATEGORY_EMISSION_FACTORS__MOBILE_SOURCE_ON_ROAD_EFAC_FKEY_SUBSTANCES);
    }

    @Override
    public MobileSourceOnRoadCategoryEmissionFactors as(String alias) {
        return new MobileSourceOnRoadCategoryEmissionFactors(DSL.name(alias), this);
    }

    @Override
    public MobileSourceOnRoadCategoryEmissionFactors as(Name alias) {
        return new MobileSourceOnRoadCategoryEmissionFactors(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MobileSourceOnRoadCategoryEmissionFactors rename(String name) {
        return new MobileSourceOnRoadCategoryEmissionFactors(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MobileSourceOnRoadCategoryEmissionFactors rename(Name name) {
        return new MobileSourceOnRoadCategoryEmissionFactors(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Short, RoadType, Short, Float> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
