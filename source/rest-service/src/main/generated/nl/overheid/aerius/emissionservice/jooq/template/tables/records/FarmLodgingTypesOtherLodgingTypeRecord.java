/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables.records;


import nl.overheid.aerius.emissionservice.jooq.template.tables.FarmLodgingTypesOtherLodgingType;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Geeft voor emissiearme stalsystemen aan wat het bijbehorende 'overige' 
 * stalsysteem is.
 * De koppeling (N:1) is alleen opgenomen als het stalsysteem als 'emissiearm' 
 * is geklassificeerd. In bepaalde gevallen wordt dan namelijk de emissiefactor 
 * begrensd in de emissie berekening, o.b.v. die van het 'overige' stalsysteem.
 * 
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/farms.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FarmLodgingTypesOtherLodgingTypeRecord extends UpdatableRecordImpl<FarmLodgingTypesOtherLodgingTypeRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 291354853;

    /**
     * Setter for <code>template.farm_lodging_types_other_lodging_type.farm_lodging_type_id</code>.
     */
    public void setFarmLodgingTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types_other_lodging_type.farm_lodging_type_id</code>.
     */
    public Integer getFarmLodgingTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>template.farm_lodging_types_other_lodging_type.farm_other_lodging_type_id</code>.
     */
    public void setFarmOtherLodgingTypeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types_other_lodging_type.farm_other_lodging_type_id</code>.
     */
    public Integer getFarmOtherLodgingTypeId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return FarmLodgingTypesOtherLodgingType.FARM_LODGING_TYPES_OTHER_LODGING_TYPE.FARM_LODGING_TYPE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return FarmLodgingTypesOtherLodgingType.FARM_LODGING_TYPES_OTHER_LODGING_TYPE.FARM_OTHER_LODGING_TYPE_ID;
    }

    @Override
    public Integer component1() {
        return getFarmLodgingTypeId();
    }

    @Override
    public Integer component2() {
        return getFarmOtherLodgingTypeId();
    }

    @Override
    public Integer value1() {
        return getFarmLodgingTypeId();
    }

    @Override
    public Integer value2() {
        return getFarmOtherLodgingTypeId();
    }

    @Override
    public FarmLodgingTypesOtherLodgingTypeRecord value1(Integer value) {
        setFarmLodgingTypeId(value);
        return this;
    }

    @Override
    public FarmLodgingTypesOtherLodgingTypeRecord value2(Integer value) {
        setFarmOtherLodgingTypeId(value);
        return this;
    }

    @Override
    public FarmLodgingTypesOtherLodgingTypeRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FarmLodgingTypesOtherLodgingTypeRecord
     */
    public FarmLodgingTypesOtherLodgingTypeRecord() {
        super(FarmLodgingTypesOtherLodgingType.FARM_LODGING_TYPES_OTHER_LODGING_TYPE);
    }

    /**
     * Create a detached, initialised FarmLodgingTypesOtherLodgingTypeRecord
     */
    public FarmLodgingTypesOtherLodgingTypeRecord(Integer farmLodgingTypeId, Integer farmOtherLodgingTypeId) {
        super(FarmLodgingTypesOtherLodgingType.FARM_LODGING_TYPES_OTHER_LODGING_TYPE);

        set(0, farmLodgingTypeId);
        set(1, farmOtherLodgingTypeId);
    }
}
