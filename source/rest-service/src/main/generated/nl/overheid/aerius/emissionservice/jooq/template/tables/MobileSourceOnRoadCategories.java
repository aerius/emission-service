/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables;


import java.util.Arrays;
import java.util.List;

import nl.overheid.aerius.emissionservice.jooq.template.Keys;
import nl.overheid.aerius.emissionservice.jooq.template.Template;
import nl.overheid.aerius.emissionservice.jooq.template.tables.records.MobileSourceOnRoadCategoriesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * De categorieën van verschillende soorten onroad mobiele bronnen.
 * Dit is qua structuur dezelfde tabel als mobile_source_off_road_categories.
 * 
 * Hierdoor zou overerving wel kunnen, echter is het nadeel hierbij dat voor 
 * de ID's vervolgens rekening gehouden moet worden met de andere tabel. Hierom 
 * is gekozen NIET gebruik te maken van overerving.
 * Er is een kans dat de lijsten afzonderlijk van elkaar zullen gaan wijzigen.
 * 
 * 
 * De naam is hierbij de identificatie van de categorie voor de gebruiker.
 * 
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/mobile_sources.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MobileSourceOnRoadCategories extends TableImpl<MobileSourceOnRoadCategoriesRecord> {

    private static final long serialVersionUID = -1719953873;

    /**
     * The reference instance of <code>template.mobile_source_on_road_categories</code>
     */
    public static final MobileSourceOnRoadCategories MOBILE_SOURCE_ON_ROAD_CATEGORIES = new MobileSourceOnRoadCategories();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MobileSourceOnRoadCategoriesRecord> getRecordType() {
        return MobileSourceOnRoadCategoriesRecord.class;
    }

    /**
     * The column <code>template.mobile_source_on_road_categories.mobile_source_on_road_category_id</code>.
     */
    public final TableField<MobileSourceOnRoadCategoriesRecord, Short> MOBILE_SOURCE_ON_ROAD_CATEGORY_ID = createField(DSL.name("mobile_source_on_road_category_id"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>template.mobile_source_on_road_categories.code</code>.
     */
    public final TableField<MobileSourceOnRoadCategoriesRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>template.mobile_source_on_road_categories.name</code>.
     */
    public final TableField<MobileSourceOnRoadCategoriesRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>template.mobile_source_on_road_categories.description</code>.
     */
    public final TableField<MobileSourceOnRoadCategoriesRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>template.mobile_source_on_road_categories</code> table reference
     */
    public MobileSourceOnRoadCategories() {
        this(DSL.name("mobile_source_on_road_categories"), null);
    }

    /**
     * Create an aliased <code>template.mobile_source_on_road_categories</code> table reference
     */
    public MobileSourceOnRoadCategories(String alias) {
        this(DSL.name(alias), MOBILE_SOURCE_ON_ROAD_CATEGORIES);
    }

    /**
     * Create an aliased <code>template.mobile_source_on_road_categories</code> table reference
     */
    public MobileSourceOnRoadCategories(Name alias) {
        this(alias, MOBILE_SOURCE_ON_ROAD_CATEGORIES);
    }

    private MobileSourceOnRoadCategories(Name alias, Table<MobileSourceOnRoadCategoriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private MobileSourceOnRoadCategories(Name alias, Table<MobileSourceOnRoadCategoriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("De categorieën van verschillende soorten onroad mobiele bronnen.\r\nDit is qua structuur dezelfde tabel als mobile_source_off_road_categories.\r\nHierdoor zou overerving wel kunnen, echter is het nadeel hierbij dat voor de ID's vervolgens rekening gehouden moet worden met de andere tabel. Hierom is gekozen NIET gebruik te maken van overerving.\r\nEr is een kans dat de lijsten afzonderlijk van elkaar zullen gaan wijzigen.\r\n\r\nDe naam is hierbij de identificatie van de categorie voor de gebruiker.\r\n\r\n@file source/database/src/main/sql/template/02_emission_factors/02-tables/mobile_sources.sql"), TableOptions.table());
    }

    public <O extends Record> MobileSourceOnRoadCategories(Table<O> child, ForeignKey<O, MobileSourceOnRoadCategoriesRecord> key) {
        super(child, key, MOBILE_SOURCE_ON_ROAD_CATEGORIES);
    }

    @Override
    public Schema getSchema() {
        return Template.TEMPLATE;
    }

    @Override
    public UniqueKey<MobileSourceOnRoadCategoriesRecord> getPrimaryKey() {
        return Keys.MOBILE_SOURCE_ON_ROAD_CATEGORIES_PKEY;
    }

    @Override
    public List<UniqueKey<MobileSourceOnRoadCategoriesRecord>> getKeys() {
        return Arrays.<UniqueKey<MobileSourceOnRoadCategoriesRecord>>asList(Keys.MOBILE_SOURCE_ON_ROAD_CATEGORIES_PKEY, Keys.MOBILE_SOURCE_ON_ROAD_CATEGORIES_CODE_KEY, Keys.MOBILE_SOURCE_ON_ROAD_CATEGORIES_NAME_KEY);
    }

    @Override
    public MobileSourceOnRoadCategories as(String alias) {
        return new MobileSourceOnRoadCategories(DSL.name(alias), this);
    }

    @Override
    public MobileSourceOnRoadCategories as(Name alias) {
        return new MobileSourceOnRoadCategories(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MobileSourceOnRoadCategories rename(String name) {
        return new MobileSourceOnRoadCategories(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MobileSourceOnRoadCategories rename(Name name) {
        return new MobileSourceOnRoadCategories(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Short, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
