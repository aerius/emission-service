/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables;


import java.util.Arrays;
import java.util.List;

import nl.overheid.aerius.emissionservice.jooq.template.Keys;
import nl.overheid.aerius.emissionservice.jooq.template.Template;
import nl.overheid.aerius.emissionservice.jooq.template.tables.records.EmissionDiurnalVariationsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Lijst met verschillende types temporele variaties.
 * 
 * We gebruiken de veldnaam diurnal_variation in alle tabellen waar emission_diurnal_variation_id 
 * als foreign key voorkomt.
 * 
 * @file source/database/src/main/sql/template/01_sectors/02-tables/02-source_characteristics.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmissionDiurnalVariations extends TableImpl<EmissionDiurnalVariationsRecord> {

    private static final long serialVersionUID = -2091456649;

    /**
     * The reference instance of <code>template.emission_diurnal_variations</code>
     */
    public static final EmissionDiurnalVariations EMISSION_DIURNAL_VARIATIONS = new EmissionDiurnalVariations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmissionDiurnalVariationsRecord> getRecordType() {
        return EmissionDiurnalVariationsRecord.class;
    }

    /**
     * The column <code>template.emission_diurnal_variations.emission_diurnal_variation_id</code>.
     */
    public final TableField<EmissionDiurnalVariationsRecord, Integer> EMISSION_DIURNAL_VARIATION_ID = createField(DSL.name("emission_diurnal_variation_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>template.emission_diurnal_variations.code</code>.
     */
    public final TableField<EmissionDiurnalVariationsRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>template.emission_diurnal_variations.name</code>.
     */
    public final TableField<EmissionDiurnalVariationsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>template.emission_diurnal_variations.description</code>.
     */
    public final TableField<EmissionDiurnalVariationsRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>template.emission_diurnal_variations</code> table reference
     */
    public EmissionDiurnalVariations() {
        this(DSL.name("emission_diurnal_variations"), null);
    }

    /**
     * Create an aliased <code>template.emission_diurnal_variations</code> table reference
     */
    public EmissionDiurnalVariations(String alias) {
        this(DSL.name(alias), EMISSION_DIURNAL_VARIATIONS);
    }

    /**
     * Create an aliased <code>template.emission_diurnal_variations</code> table reference
     */
    public EmissionDiurnalVariations(Name alias) {
        this(alias, EMISSION_DIURNAL_VARIATIONS);
    }

    private EmissionDiurnalVariations(Name alias, Table<EmissionDiurnalVariationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmissionDiurnalVariations(Name alias, Table<EmissionDiurnalVariationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Lijst met verschillende types temporele variaties.\r\n\r\nWe gebruiken de veldnaam diurnal_variation in alle tabellen waar emission_diurnal_variation_id als foreign key voorkomt.\r\n\r\n@file source/database/src/main/sql/template/01_sectors/02-tables/02-source_characteristics.sql"), TableOptions.table());
    }

    public <O extends Record> EmissionDiurnalVariations(Table<O> child, ForeignKey<O, EmissionDiurnalVariationsRecord> key) {
        super(child, key, EMISSION_DIURNAL_VARIATIONS);
    }

    @Override
    public Schema getSchema() {
        return Template.TEMPLATE;
    }

    @Override
    public UniqueKey<EmissionDiurnalVariationsRecord> getPrimaryKey() {
        return Keys.EMISSION_DIURNAL_VARIATIONS_PKEY;
    }

    @Override
    public List<UniqueKey<EmissionDiurnalVariationsRecord>> getKeys() {
        return Arrays.<UniqueKey<EmissionDiurnalVariationsRecord>>asList(Keys.EMISSION_DIURNAL_VARIATIONS_PKEY, Keys.EMISSION_DIURNAL_VARIATIONS_CODE_KEY, Keys.EMISSION_DIURNAL_VARIATIONS_NAME_KEY);
    }

    @Override
    public EmissionDiurnalVariations as(String alias) {
        return new EmissionDiurnalVariations(DSL.name(alias), this);
    }

    @Override
    public EmissionDiurnalVariations as(Name alias) {
        return new EmissionDiurnalVariations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmissionDiurnalVariations rename(String name) {
        return new EmissionDiurnalVariations(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EmissionDiurnalVariations rename(Name name) {
        return new EmissionDiurnalVariations(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
