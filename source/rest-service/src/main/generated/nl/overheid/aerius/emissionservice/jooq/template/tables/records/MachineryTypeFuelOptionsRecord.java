/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables.records;


import nl.overheid.aerius.emissionservice.jooq.template.tables.MachineryTypeFuelOptions;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Parameters per werktuig en brandstof voor de emissieberekening.
 * @column power vermogen in kW.
 * @column load belasting, een percentage als fractie.
 * @column energy_efficiency efficientie van de motor in g/kWh (hoeveel gram 
 * brandstof benodigd is voor 1 kWh).
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/machinery_types.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachineryTypeFuelOptionsRecord extends UpdatableRecordImpl<MachineryTypeFuelOptionsRecord> implements Record5<Integer, Integer, Integer, Float, Float> {

    private static final long serialVersionUID = 1410175153;

    /**
     * Setter for <code>template.machinery_type_fuel_options.machinery_type_id</code>.
     */
    public void setMachineryTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.machinery_type_fuel_options.machinery_type_id</code>.
     */
    public Integer getMachineryTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>template.machinery_type_fuel_options.machinery_fuel_type_id</code>.
     */
    public void setMachineryFuelTypeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.machinery_type_fuel_options.machinery_fuel_type_id</code>.
     */
    public Integer getMachineryFuelTypeId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>template.machinery_type_fuel_options.power</code>.
     */
    public void setPower(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.machinery_type_fuel_options.power</code>.
     */
    public Integer getPower() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>template.machinery_type_fuel_options.load</code>.
     */
    public void setLoad(Float value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.machinery_type_fuel_options.load</code>.
     */
    public Float getLoad() {
        return (Float) get(3);
    }

    /**
     * Setter for <code>template.machinery_type_fuel_options.energy_efficiency</code>.
     */
    public void setEnergyEfficiency(Float value) {
        set(4, value);
    }

    /**
     * Getter for <code>template.machinery_type_fuel_options.energy_efficiency</code>.
     */
    public Float getEnergyEfficiency() {
        return (Float) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Float, Float> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, Integer, Float, Float> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MachineryTypeFuelOptions.MACHINERY_TYPE_FUEL_OPTIONS.MACHINERY_TYPE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return MachineryTypeFuelOptions.MACHINERY_TYPE_FUEL_OPTIONS.MACHINERY_FUEL_TYPE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return MachineryTypeFuelOptions.MACHINERY_TYPE_FUEL_OPTIONS.POWER;
    }

    @Override
    public Field<Float> field4() {
        return MachineryTypeFuelOptions.MACHINERY_TYPE_FUEL_OPTIONS.LOAD;
    }

    @Override
    public Field<Float> field5() {
        return MachineryTypeFuelOptions.MACHINERY_TYPE_FUEL_OPTIONS.ENERGY_EFFICIENCY;
    }

    @Override
    public Integer component1() {
        return getMachineryTypeId();
    }

    @Override
    public Integer component2() {
        return getMachineryFuelTypeId();
    }

    @Override
    public Integer component3() {
        return getPower();
    }

    @Override
    public Float component4() {
        return getLoad();
    }

    @Override
    public Float component5() {
        return getEnergyEfficiency();
    }

    @Override
    public Integer value1() {
        return getMachineryTypeId();
    }

    @Override
    public Integer value2() {
        return getMachineryFuelTypeId();
    }

    @Override
    public Integer value3() {
        return getPower();
    }

    @Override
    public Float value4() {
        return getLoad();
    }

    @Override
    public Float value5() {
        return getEnergyEfficiency();
    }

    @Override
    public MachineryTypeFuelOptionsRecord value1(Integer value) {
        setMachineryTypeId(value);
        return this;
    }

    @Override
    public MachineryTypeFuelOptionsRecord value2(Integer value) {
        setMachineryFuelTypeId(value);
        return this;
    }

    @Override
    public MachineryTypeFuelOptionsRecord value3(Integer value) {
        setPower(value);
        return this;
    }

    @Override
    public MachineryTypeFuelOptionsRecord value4(Float value) {
        setLoad(value);
        return this;
    }

    @Override
    public MachineryTypeFuelOptionsRecord value5(Float value) {
        setEnergyEfficiency(value);
        return this;
    }

    @Override
    public MachineryTypeFuelOptionsRecord values(Integer value1, Integer value2, Integer value3, Float value4, Float value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MachineryTypeFuelOptionsRecord
     */
    public MachineryTypeFuelOptionsRecord() {
        super(MachineryTypeFuelOptions.MACHINERY_TYPE_FUEL_OPTIONS);
    }

    /**
     * Create a detached, initialised MachineryTypeFuelOptionsRecord
     */
    public MachineryTypeFuelOptionsRecord(Integer machineryTypeId, Integer machineryFuelTypeId, Integer power, Float load, Float energyEfficiency) {
        super(MachineryTypeFuelOptions.MACHINERY_TYPE_FUEL_OPTIONS);

        set(0, machineryTypeId);
        set(1, machineryFuelTypeId);
        set(2, power);
        set(3, load);
        set(4, energyEfficiency);
    }
}
