/*
 * This file is generated by jOOQ.
 */
package nl.overheid.aerius.emissionservice.jooq.template.tables.records;


import nl.overheid.aerius.emissionservice.jooq.template.tables.FarmLodgingTypes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Stalsystemen (huisvestingssystemen); dit is in essentie de RAV-code lijst, 
 * zie http://wetten.overheid.nl/BWBR0013629/geldigheidsdatum_11-06-2015#Bijlage1 
 * Een stalsysteem behoort altijd tot een bepaalde diercategorie.
 * Ook aangegeven is of het een luchtwasser is.
 * 
 * @file source/database/src/main/sql/template/02_emission_factors/02-tables/farms.sql
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FarmLodgingTypesRecord extends UpdatableRecordImpl<FarmLodgingTypesRecord> implements Record6<Integer, Integer, String, String, String, Boolean> {

    private static final long serialVersionUID = -1479137035;

    /**
     * Setter for <code>template.farm_lodging_types.farm_lodging_type_id</code>.
     */
    public void setFarmLodgingTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.farm_lodging_type_id</code>.
     */
    public Integer getFarmLodgingTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>template.farm_lodging_types.farm_animal_category_id</code>.
     */
    public void setFarmAnimalCategoryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.farm_animal_category_id</code>.
     */
    public Integer getFarmAnimalCategoryId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>template.farm_lodging_types.code</code>.
     */
    public void setCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.code</code>.
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>template.farm_lodging_types.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>template.farm_lodging_types.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>template.farm_lodging_types.scrubber</code>.
     */
    public void setScrubber(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>template.farm_lodging_types.scrubber</code>.
     */
    public Boolean getScrubber() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, String, String, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, String, String, String, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.FARM_LODGING_TYPE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.FARM_ANIMAL_CATEGORY_ID;
    }

    @Override
    public Field<String> field3() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.CODE;
    }

    @Override
    public Field<String> field4() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.NAME;
    }

    @Override
    public Field<String> field5() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.DESCRIPTION;
    }

    @Override
    public Field<Boolean> field6() {
        return FarmLodgingTypes.FARM_LODGING_TYPES.SCRUBBER;
    }

    @Override
    public Integer component1() {
        return getFarmLodgingTypeId();
    }

    @Override
    public Integer component2() {
        return getFarmAnimalCategoryId();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Boolean component6() {
        return getScrubber();
    }

    @Override
    public Integer value1() {
        return getFarmLodgingTypeId();
    }

    @Override
    public Integer value2() {
        return getFarmAnimalCategoryId();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Boolean value6() {
        return getScrubber();
    }

    @Override
    public FarmLodgingTypesRecord value1(Integer value) {
        setFarmLodgingTypeId(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value2(Integer value) {
        setFarmAnimalCategoryId(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord value6(Boolean value) {
        setScrubber(value);
        return this;
    }

    @Override
    public FarmLodgingTypesRecord values(Integer value1, Integer value2, String value3, String value4, String value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FarmLodgingTypesRecord
     */
    public FarmLodgingTypesRecord() {
        super(FarmLodgingTypes.FARM_LODGING_TYPES);
    }

    /**
     * Create a detached, initialised FarmLodgingTypesRecord
     */
    public FarmLodgingTypesRecord(Integer farmLodgingTypeId, Integer farmAnimalCategoryId, String code, String name, String description, Boolean scrubber) {
        super(FarmLodgingTypes.FARM_LODGING_TYPES);

        set(0, farmLodgingTypeId);
        set(1, farmAnimalCategoryId);
        set(2, code);
        set(3, name);
        set(4, description);
        set(5, scrubber);
    }
}
